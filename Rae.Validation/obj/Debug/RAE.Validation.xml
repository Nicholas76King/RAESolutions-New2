<?xml version="1.0"?>
<doc>
<assembly>
<name>
RAE.Validation
</name>
</assembly>
<members>
<member name="M:Rae.Validation.AmongRangeValidator.#ctor(System.String,System.Double,System.Double)">
	<summary>Constructs validator with error message and limits.</summary>
	<param name="errorMessage">Message to show if value is out of range.</param>
	<param name="lowerLimit">Lower limit that the value must be greater than or equal to.</param>
	<param name="upperLimit">Upper limit that the value must be less than or equal to.</param>
</member><member name="M:Rae.Validation.AmongRangeValidator.Validate">
	<summary>Determines whether value is among the range and sets control and error provider accordingly.
 </summary>
	<remarks>Sets IsValid property. Sets ErrorProvider using ErrorMessage.
 </remarks>
	<returns>Returns true when value is among the range. True is returned when the value is equal to either limit.
 </returns>
	<history>Created by Casey J. on 10/19/2005
 </history>
</member><member name="T:Rae.Validation.AmongRangeValidator">
	<summary>Determines whether a value is among the range.
 </summary>
	<remarks>Value is valid when it is greater than or equal to lower limit and less than or equal to upper limit.
 </remarks>
	<history>Created by Casey J. on 10/19/2005
 </history>
</member><member name="P:Rae.Validation.ErrorMessages.Required(System.String)">
	<summary>Message indicating field is required
 </summary>
	<param name="controlName">Name to identify the control being validated
 </param>
	<value>String indicating field is required
 </value>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="E:Rae.Validation.ValidationControl.Validating">
	<summary>Allows custom validation to run besides validators
 </summary>
	<remarks>Add a message to the error message list if the control is found to be invalid.
 Event is raised after the validators Validate() method is executed.
 </remarks>
</member><member name="M:Rae.Validation.ValidationControl.#ctor(System.Windows.Forms.Control)">
	<summary>Constructs a new validation control for the controlToValidate 
 parameter
 </summary>
	<param name="controlToValidate">Control to validate
 </param>
	<remarks>Also constructs lists
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Validation.ValidationControl.Validate">
	<summary>Validates control and returns is valid property
 </summary>
	<returns>Boolean indicating whether or not control is valid
 </returns>
	<remarks>Sets IsValid property. Sets error provider's error message.
 Validates each of the control's validators.
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Validation.ValidationControl.Validator_Added(Rae.Validation.Validator)">
	<summary>Handles validator added to list
 </summary>
	<param name="validator">Validator that was added
 </param>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Validation.RegularExpressionValidator.#ctor(System.String,System.String)">
	<summary>Constructs regular expression validator object
 </summary>
	<param name="errorMessage">Error message to show, if control is not valid
 </param>
	<param name="regularExpression">Regular expression used to check validity
 </param>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Validation.RegularExpressionValidator.Validate">
	<summary>Validates control using regular expression and returns IsValid property
 </summary>
	<returns>Boolean indicating whether or not control is valid
 </returns>
	<remarks>Sets error provider's error property and is valid property
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Validation.ValidationControlList.Remove(Rae.Validation.ValidationControl)">
	<summary>Removes validation control from the list
 </summary>
	<param name="validationControl">Validation control to be removed from 
 the list
 </param>
	<history>[Casey.Joyce]	6/5/2005	Created
 </history>
</member><member name="M:Rae.Validation.ValidationControlList.IndexOf(System.String)">
	<summary>Gets the index of the validation control parameter
 </summary>
	<param name="validationControl">Validation control to get index for
 </param>
	<returns>Index of the validation control parameter
 </returns>
	<remarks>If the validation control is not found, -1 is returned.
 </remarks>
	<history>[Casey.Joyce]	6/5/2005	Created
 </history>
</member><member name="P:Rae.Validation.ValidationManager.ErrorProvider">
 -----------------------------------------------------------------------------
 <summary>
 Error provider handles displaying validation icon and pop-ups
 </summary>
	<value>System.Windows.Forms.ErrorProvider control</value>
	<remarks>No remarks
 </remarks>
	<history>
 	[CASEYJ]	7/29/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Rae.Validation.ValidationManager.ValidationControls">
	<summary>List of controls that can be validated by the manager
 </summary>
</member><member name="P:Rae.Validation.ValidationManager.ErrorMessages">
	<summary>List of error messages generated due to invalid inputs
 </summary>
</member><member name="P:Rae.Validation.ValidationManager.IsValid">
	<summary>Boolean indicating whether or not managed controls are valid
 </summary>
	<remarks>Does not execute validation method, just is set after validation runs
 </remarks>
</member><member name="P:Rae.Validation.ValidationManager.ErrorMessagesSummary">
	<summary>String that summarizes the list of error messages
 </summary>
</member><member name="M:Rae.Validation.ValidationManager.#ctor(System.Windows.Forms.ErrorProvider)">
	<summary>Constructs a validation manager object with error provider parameter
 </summary>
	<param name="errorProvider">Error provider to handle validation
 </param>
	<remarks>Constructs lists and sets error provider.
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Validation.ValidationManager.Validate">
	<summary>Validates managed controls
 </summary>
	<returns>Boolean indicating whether or not managed controls are valid
 </returns>
	<remarks>Sets error message list and error messages summary properties. 
 Sets is valid property.
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Validation.ValidationManager.ValidationControl_Added(Rae.Validation.ValidationControl)">
	<summary>Handles validation control added to list
 </summary>
	<param name="validationControl">Validation control that was added
 </param>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member>
</members>
</doc>