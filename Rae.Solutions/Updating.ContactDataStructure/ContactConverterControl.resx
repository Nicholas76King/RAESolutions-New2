<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="IsConvertedColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ContactNameColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CompanyNameColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="RoleColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CreateColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="OrColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="SelectColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAO
        BgAAAk1TRnQBSQFMAwEBAAEFAQABBAEAARABAAEQAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABGAYAAQwbAAHtAfQB7gGnAcsBrAFeAZ8BZgEtAYEBOAEvAYIBOgExAYUBOwEvAYIBOgEz
        AYQBPQFjAaEBawHdAeoB358AAbYB1AG6AUUBkAFOAToBjgFFAUIBlQFOAUcBmAFSAUsBmwFVAUcBmAFS
        AUIBkwFNAT0BjQFHAS8BgwE6ASsBfgE1AY4BugGTmQABsgHSAbYBNgGJAUEBUgGjAV0BWgGrAWYBVQGm
        AWABTQGgAVoBTQGfAVgBSQGbAVQBRwGYAVEBQwGUAU4BQgGSAUwBPAGMAUYBJwF8ATIBigG4AZCTAAHw
        AfYB8AFNAZcBVwFYAasBZAFjAbUBbwFdAa8BaQFRAagBXQFaAakBZAFIAZ4BVAFNAaABWAFJAZwBVQFH
        AZkBUQFEAZUBTgFCAZMBTAE8AY0BRwEtAYABNwHYAegB2pAAAbYB1gG7AVsBrgFmAXEBwgF9AWgBuQF0
        AVYBrwFiAZgBzQGfAeMB8AHlAX4BvQGHAUcBnwFTAU0BoQFaAUsBngFXAUgBmgFUAUQBlgFPAUIBkwFO
        ATUBhwFAAYwBugGSkAABdgG0AX4BdgHIAYIBdwHIAYMBYwG6AXABiQHIAZIB9wH7AfgG/wGWAckBnQFG
        AaABUgFOAaIBWQFNAZ8BVwFIAZoBUwFFAZYBTwFBAZIBTAE/AYwBSZAAAVgBrAFkAYUB1wGRAXkBywGE
        AYYBywGPAfAB+QHyAfUB+QH2AXsBsQGDAfUB+gH2A/8BlQHJAZwBRwGgAVMBTgGjAVoBSwGeAVcBSAGa
        AVMBRgGXAVABMgGGAT2QAAFkAbUBbwGWAegBogF8AdEBiAHIAewBzQH7AfwB+wF6AbEBggE7AZQBRwFv
        AawBeAH2AfkB9gP+AZYBygGbAUkBogFWAU8BogFaAU0BngFXAUsBnAFVATcBigFBkAABawG9AXYBpQH1
        AbABjAHfAZgBigHWAZUBiQHAAZEBTgGiAVoBbAG/AXgBSQGgAVUBcAGtAXkB9wH7AfgD/wGTAcgBmwFK
        AaMBVgFPAaIBWgFPAaABWgE4AYwBQ5AAAWUBuQFwAasB/AG3AZwB7gGoAYYB2AGRAWgBvgF1AW4BwQF6
        AWwBvgF3AWsBvQF1AUgBngFUAXQBrwF8AfMB+AH0AfoB/AH6AZEByAGZAVEBpQFdAVEBogFbATUBigFA
        kAABaQGyAXIBsgH3Ab4BrwH+AbsBlgHoAaIBhAHWAZABdgHJAYIBbwHCAXsBbQG/AXcBagG9AXYBRgGd
        AVEBeQGyAYEB/AH9AfwB+AH8AfkBcgG3AXsBUAGiAVsBQgGQAUyQAAGwAdUBtQGJAdABlQHGAf8B0gGq
        AfsBtgGUAeYBnwGCAdQBjgF3AckBgwFyAcQBfgFuAcEBewFtAcABeAFIAaABVQGGAboBjgGsAdgBsgFk
        AbMBcAFJAZsBVAFtAagBdJAAAesB9AHsAW8BtgF5Ab0B9QHJAcUB/wHRAakB+gG0AZUB6AGhAYYB1wGR
        AXwBzwGIAXYByQGCAXQBxwGAAXABwgF7AVoBrwFmAWIBtwFvAWABsgFrATUBhwFAAdoB6QHckwABwwHf
        AccBagG2AXUBugHyAcYByAH/AdQBrgH9AboBmgHtAacBjAHfAZgBhAHVAY4BfQHPAYkBeQHJAYQBdwHJ
        AYIBagG7AXcBOgGOAUUBpQHKAaqZAAHBAd4BxQFjAa8BbwGTAdMBngG8AfkByAGxAf4BvQGiAfMBrQGT
        AeQBnwGJAdsBlQF/Ac8BiQFiAbQBbgFDAZUBTgGtAdABsp8AAeAB7wHiAYsBwQGSAWABrQFrAWABswFr
        AWYBugFyAWcBuQFyAVwBrwFoAVkBpAFjAY4BwAGUAeYB8QHnmQABQgFNAT4HAAE+AwABKAMAAUADAAEQ
        AwABAQEAAQEFAAGAFwAD/wEAAeABBwYAAcABAwYAAYABAVYAAYABAQYAAcABAwYAAeABBwYACw==
</value>
  </data>
</root>