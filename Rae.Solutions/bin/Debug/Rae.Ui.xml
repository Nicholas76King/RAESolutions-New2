<?xml version="1.0"?>
<doc>
<assembly>
<name>
Rae.Ui
</name>
</assembly>
<members>
<member name="E:Rae.Ui.Controls.ToggleLink.Toggled">
	<summary>Occurs after link is toggled</summary>
</member><member name="P:Rae.Ui.Controls.ToggleLink.Text">
	<summary>Text that is displayed when link is not toggled.</summary>
</member><member name="P:Rae.Ui.Controls.ToggleLink.TextToggled">
	<summary>Text that is displayed when link is toggled.</summary>
</member><member name="P:Rae.Ui.Controls.ToggleLink.Image">
	<summary>Image that is displayed when link is not toggled.</summary>
</member><member name="P:Rae.Ui.Controls.ToggleLink.ImageToggled">
	<summary>Image that is display when link is not toggled</summary>
</member><member name="P:Rae.Ui.Controls.ToggleLink.IsToggled">
	<summary>True if link is toggled</summary>
</member><member name="M:Rae.Ui.Controls.ToggleLink.Toggle">
	<summary>Toggles link</summary>
</member><member name="T:Rae.Ui.Controls.ToggleLink">
	<summary>Link that toggles text and image when toggled (clicked)</summary>
</member><member name="F:Rae.Ui.Controls.ToggledEventArgs.IsToggled">
	<summary>True if sender is toggled</summary>
</member><member name="T:Rae.Ui.Controls.ToggledEventArgs">
	<summary>Contains toggle event arguments</summary>
</member><member name="P:Rae.Ui.Validation.ValidationManager.ErrorProvider">
 -----------------------------------------------------------------------------
 <summary>
 Error provider handles displaying validation icon and pop-ups
 </summary>
	<value>System.Windows.Forms.ErrorProvider control</value>
	<remarks>No remarks
 </remarks>
	<history>
 	[CASEYJ]	7/29/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Rae.Ui.Validation.ValidationManager.ValidationControls">
	<summary>List of controls that can be validated by the manager
 </summary>
</member><member name="P:Rae.Ui.Validation.ValidationManager.ErrorMessages">
	<summary>List of error messages generated due to invalid inputs
 </summary>
</member><member name="P:Rae.Ui.Validation.ValidationManager.IsValid">
	<summary>Boolean indicating whether or not managed controls are valid
 </summary>
	<remarks>Does not execute validation method, just is set after validation runs
 </remarks>
</member><member name="P:Rae.Ui.Validation.ValidationManager.ErrorMessagesSummary">
	<summary>String that summarizes the list of error messages
 </summary>
</member><member name="M:Rae.Ui.Validation.ValidationManager.#ctor(System.Windows.Forms.ErrorProvider)">
	<summary>Constructs a validation manager object with error provider parameter
 </summary>
	<param name="errorProvider">Error provider to handle validation
 </param>
	<remarks>Constructs lists and sets error provider.
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Ui.Validation.ValidationManager.Validate">
	<summary>Validates managed controls
 </summary>
	<returns>Boolean indicating whether or not managed controls are valid
 </returns>
	<remarks>Sets error message list and error messages summary properties. 
 Sets is valid property.
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Ui.Validation.ValidationManager.ValidationControl_Added(Rae.Ui.Validation.ValidationControl)">
	<summary>Handles validation control added to list
 </summary>
	<param name="validationControl">Validation control that was added
 </param>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Ui.Controls.Header.#ctor">
	<summary>
 Constructs header control.
 </summary>
</member><member name="P:Rae.Ui.Controls.Header.Text">
	<summary>
 Title text to display.
 </summary>
</member><member name="M:Rae.Ui.Controls.Header.OnPaint(System.Windows.Forms.PaintEventArgs)">
	<summary>
 Paints gradient and text.
 </summary>
</member><member name="M:Rae.Ui.Controls.Header.AlignVertical">
	<summary>
 Aligns text vertically in the middle.
 </summary>
</member><member name="M:Rae.Ui.Controls.Header.Initialize">
	<summary>
 Initializes header control's initial state.
 </summary>
</member><member name="T:Rae.Ui.Controls.Header">
	<summary>
 Header control displays a title and supports gradient background color fill.
 </summary>
	<history by="Casey Joyce" finish="2006/08/06">
	</history>
</member><member name="P:DataGridViewImageColumnHeaderCell.Image">
	<summary>
 Image to draw in header cell.
 </summary>
</member><member name="M:DataGridViewImageColumnHeaderCell.#ctor">
	<summary>
 Constructs column header cell that can display an image.
 </summary>
</member><member name="M:DataGridViewImageColumnHeaderCell.#ctor(System.Drawing.Image)">
	<summary>
 Constructs column header cell that will display <paramref name="image">image</paramref>.
 </summary>
	<param name="image">
 Image to draw in header cell.
 </param>
</member><member name="M:DataGridViewImageColumnHeaderCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
	<summary>
 Overrides painting to draw image.
 </summary>
</member><member name="M:DataGridViewImageColumnHeaderCell.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
	<summary>
 Draws Image property in header cell.
 </summary>
</member><member name="T:DataGridViewImageColumnHeaderCell">
	<summary>
 Column header that displays an image.
 </summary>
	<history by="Casey Joyce" finish="2006/07/14">
 Created
 </history>
</member><member name="P:Rae.Ui.Validation.ErrorMessages.Required(System.String)">
	<summary>Message indicating field is required
 </summary>
	<param name="controlName">Name to identify the control being validated
 </param>
	<value>String indicating field is required
 </value>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="F:Rae.Ui.TerminalDecision.Continue">
	<summary>
 Continue running application.
 </summary>
</member><member name="F:Rae.Ui.TerminalDecision.Exit">
	<summary>
 Exit application.
 </summary>
</member><member name="T:Rae.Ui.TerminalDecision">
	<summary>
 The decision to continue or exit application.
 </summary>
	<history by="Casey Joyce" finish="2006/06/23">
 Created
 </history>
</member><member name="P:Rae.Ui.Controls.CollapsableHeader.CollapsableControl">
	<summary>
 Control that is collapsed or expanded.
 </summary>
</member><member name="P:Rae.Ui.Controls.CollapsableHeader.ShouldCollapseContainer">
	<summary>
 True if parent container should change size based on collapsable control's visibility.
 </summary>
</member><member name="M:Rae.Ui.Controls.CollapsableHeader.#ctor">
	<summary>
 Constructs collapsable header.
 </summary>
</member><member name="M:Rae.Ui.Controls.CollapsableHeader.Toggle">
	<summary>
 Toggles picture which causes the toggle event to be raised.
 </summary>
</member><member name="M:Rae.Ui.Controls.CollapsableHeader.OnPaint(System.Windows.Forms.PaintEventArgs)">
	<summary>
 Paints toggle picture box.
 </summary>
</member><member name="M:Rae.Ui.Controls.CollapsableHeader.InitializePictureBox">
	<summary>
 Initializes toggle picture box.
 </summary>
</member><member name="M:Rae.Ui.Controls.CollapsableHeader.PlaceTogglePicture">
	<summary>
 Sets toggle picture box location.
 </summary>
</member><member name="M:Rae.Ui.Controls.CollapsableHeader.picCollapse_Toggled(Rae.Ui.Controls.TogglePictureBox,System.EventArgs)">
	<summary>
 Handles collapse toggle picture box toggled event.
 Toggles collapse control's visibility.
 </summary>
</member><member name="T:Rae.Ui.Controls.CollapsableHeader">
	<summary>
 Header with image that can collapse/expand another control.
 </summary>
	<remarks>
 Click the collapse image to toggle the visibility of another control.
 This Header can be used to toggle a control in its parent container (ShouldCollapseContainer=True),
 or to toggle any other control (ShouldCollapseContainer=False).
 </remarks>
	<history by="Casey Joyce" finish="2006/08/07" hours="2">
 Created
 </history>
</member><member name="M:Rae.Ui.FormEditor.MaximizeHeight(System.Windows.Forms.Form@)">
	<summary>
 Maximizes the height of the form inside its container.
 </summary>
	<param name="form">
 The form to maximize.
 </param>
	<returns>
 Maximum height of form inside container.
 </returns>
	<remarks>
 This height is sometimes different than MdiParent.DisplayRectangle or ClientSize
 </remarks>
</member><member name="M:Rae.Ui.Validation.AmongRangeValidator.#ctor(System.String,System.Double,System.Double)">
	<summary>Constructs validator with error message and limits.</summary>
	<param name="errorMessage">Message to show if value is out of range.</param>
	<param name="lowerLimit">Lower limit that the value must be greater than or equal to.</param>
	<param name="upperLimit">Upper limit that the value must be less than or equal to.</param>
</member><member name="M:Rae.Ui.Validation.AmongRangeValidator.Validate">
	<summary>Determines whether value is among the range and sets control and error provider accordingly.
 </summary>
	<remarks>Sets IsValid property. Sets ErrorProvider using ErrorMessage.
 </remarks>
	<returns>Returns true when value is among the range. True is returned when the value is equal to either limit.
 </returns>
	<history>Created by Casey J. on 10/19/2005
 </history>
</member><member name="T:Rae.Ui.Validation.AmongRangeValidator">
	<summary>Determines whether a value is among the range.</summary>
	<remarks>Value is valid when it is greater than or equal to lower limit and less than or equal to upper limit.
 </remarks>
	<history>Created by Casey J. on 10/19/2005</history>
</member><member name="M:Rae.Ui.Validation.RegularExpressionValidator.#ctor(System.String,System.String)">
	<summary>Constructs regular expression validator object
 </summary>
	<param name="errorMessage">Error message to show, if control is not valid
 </param>
	<param name="regularExpression">Regular expression used to check validity
 </param>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Ui.Validation.RegularExpressionValidator.Validate">
	<summary>Validates control using regular expression and returns IsValid property
 </summary>
	<returns>Boolean indicating whether or not control is valid
 </returns>
	<remarks>Sets error provider's error property and is valid property
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Ui.Validation.ValidationControlList.Add(Rae.Ui.Validation.ValidationControl)">
	<summary>Adds a validation control to the list
 </summary>
	<returns>Index that the validation control was added to
 </returns>
</member><member name="M:Rae.Ui.Validation.ValidationControlList.Remove(Rae.Ui.Validation.ValidationControl)">
	<summary>Removes validation control from the list
 </summary>
	<param name="validationControl">Validation control to be removed from 
 the list
 </param>
</member><member name="M:Rae.Ui.Validation.ValidationControlList.IndexOf(System.String)">
	<summary>Gets the index of the validation control parameter
 </summary>
	<param name="validationControl">Validation control to get index for
 </param>
	<returns>Index of the validation control parameter
 </returns>
	<remarks>If the validation control is not found, -1 is returned.
 </remarks>
</member><member name="M:Rae.Ui.Validation.ValidationControlList.Item(System.Int32)">
	<summary>Gets the validation control at the index parameter</summary>
</member><member name="M:C1.Win.C1TrueDBGrid.Grid.MoveColumn(C1.Win.C1TrueDBGrid.C1DisplayColumn,System.Int32)">
	<summary>
 Moves column to the index
 </summary>
	<param name="column">Column to be moved</param>
	<param name="toIndex">The index to move the column to</param>
</member><member name="T:C1.Win.C1TrueDBGrid.Grid">
	<summary>
 This is an extended C1TrueDBGrid.
 </summary>
</member><member name="M:Rae.Ui.C1GridStyles.BasicGridStyle(C1.Win.C1TrueDBGrid.C1TrueDBGrid)">
	<summary>Sets grid's style to a common style used by a number of grids</summary>
</member><member name="P:Rae.Ui.Controls.Link.Text">
	<summary>Text that is displayed in link.</summary>
</member><member name="P:Rae.Ui.Controls.Link.Image">
	<summary>Image that is displayed in link.</summary>
</member><member name="T:Rae.Ui.Controls.Link">
	<summary>Link with image on left</summary>
	<remarks>On hover text formats to indicate it's a link.</remarks>
</member><member name="P:Rae.Ui.Controls.GradientPanel.GradientStartColor">
	<summary>
 Color at beginning of gradient
 </summary>
</member><member name="P:Rae.Ui.Controls.GradientPanel.GradientEndColor">
	<summary>
 Color at end of gradient
 </summary>
</member><member name="P:Rae.Ui.Controls.GradientPanel.GradientAngle">
	<summary>
 Angle of the gradient
 </summary>
</member><member name="P:Rae.Ui.Controls.GradientPanel.HorizontalFillPercent">
	<summary>
 Percentage of the panel width that the gradient covers.
 </summary>
	<remarks>
 The portion of the panel that is not covered by the gradient is at the end of the panel.
 </remarks>
</member><member name="P:Rae.Ui.Controls.GradientPanel.VerticalFillPercent">
	<summary>
 Percentage of the panel height that the gradient covers.
 </summary>
</member><member name="P:Rae.Ui.Controls.GradientPanel.Flip">
	<summary>
 Flips the image
 </summary>
</member><member name="M:Rae.Ui.Controls.GradientPanel.#ctor">
	<summary>
 Constructs a new gradient panel
 </summary>
</member><member name="M:Rae.Ui.Controls.GradientPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
	<summary>
 Overrides the normal paint method for the background and paints a gradient 
 </summary>
</member><member name="P:Rae.Ui.Controls.GradientPanel.BorderColor">
	<summary>
 Border color
 </summary>
</member><member name="P:Rae.Ui.Controls.GradientPanel.BorderWidth">
	<summary>
 Border width
 </summary>
</member><member name="T:Rae.Ui.Controls.GradientPanel">
	<summary>
 Panel that supports a gradiated back color.
 </summary>
	<history by="Casey Joyce" finish="2006/04/12" hours="2">
 Created; started from MSN Messanger Demo
 </history>
</member><member name="P:My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Rae.Ui.ListHelper.IndexOfComboBoxItem(System.Windows.Forms.ComboBox,System.Object)">
	<summary>Returns index of combobox item</summary>
	<remarks>Item parameter must be the full object in combobox.
 Match won't be found if item parameter matches the ToString property or DisplayMember only.
 </remarks>
</member><member name="M:Rae.Ui.ListHelper.IndexOfComboboxDataRowViewItem(System.Windows.Forms.ComboBox,System.Object,System.String)">
	<summary>Returns index of combobox item; use when datasource is a datatable</summary>
</member><member name="M:Rae.Ui.ListHelper.IndexOfComboboxObject(System.Windows.Forms.ComboBox,System.Object,System.Int32)">
	<summary>Gets index of object from combobox by using Equals method</summary>
	<remarks>In most cases, the Equals method should be overriden for the objectToCompare parameter</remarks>
	<history>Created on 11/22/2005 by Casey Joyce</history>
</member><member name="P:Rae.Ui.Controls.RolloverPictureBox.RolloverImage">
	<summary>
 Image that displays while mouse is over RolloverPictureBox.
 </summary>
</member><member name="P:Rae.Ui.Controls.RolloverPictureBox.RolloverCursor">
	<summary>
 Cursor that displays while mouse is over RolloverPictureBox.
 </summary>
</member><member name="M:Rae.Ui.Controls.RolloverPictureBox.#ctor">
	<summary>
 Constructs rollover picture box.
 </summary>
</member><member name="M:Rae.Ui.Controls.RolloverPictureBox.OnMouseRollOver(System.Object,System.EventArgs)">
	<summary>
 Event handler that manages image swapping when the mouse hovers over the PictureBox
 </summary>
</member><member name="M:Rae.Ui.Controls.RolloverPictureBox.OnMouseRollOut(System.Object,System.EventArgs)">
	<summary>
  Event handler that manages image swapping when the mouse leaves the PictureBox
 </summary>
</member><member name="T:Rae.Ui.Controls.RolloverPictureBox">
	<summary>
 PictureBox with rollover effect. When mouse enters PictureBox the <see cref="P:Rae.Ui.Controls.RolloverPictureBox.RolloverImage"/> is shown.
 When the mouse leaves the PictureBox the original image is displayed again replacing the rollover image.
 </summary>
</member><member name="E:Rae.Ui.Controls.TogglePictureBox.Toggled">
	<summary>
 Occurs after/before ...
 </summary>
</member><member name="P:Rae.Ui.Controls.TogglePictureBox.UntoggledImage">
	<summary>
 Image shown when image is untoggled (default).
 </summary>
</member><member name="P:Rae.Ui.Controls.TogglePictureBox.UntoggledRolloverImage">
	<summary>
 Image shown when image is untoggled
 </summary>
</member><member name="P:Rae.Ui.Controls.TogglePictureBox.ToggledImage">
	<summary>
 Image shown when image is toggled.
 </summary>
</member><member name="P:Rae.Ui.Controls.TogglePictureBox.ToggledRolloverImage">
	<summary>
 Image shown when image is toggled and mouse rolls over.
 </summary>
</member><member name="P:Rae.Ui.Controls.TogglePictureBox.IsToggled">
	<summary>
 True when image is toggled, false when image is untoggled
 </summary>
</member><member name="P:Rae.Ui.Controls.TogglePictureBox.RolloverCursor">
	<summary>
 RolloverCursor
 </summary>
</member><member name="P:Rae.Ui.Controls.TogglePictureBox.Image">
	<summary>
 Hides image
 </summary>
</member><member name="M:Rae.Ui.Controls.TogglePictureBox.#ctor">
	<summary>
 Constructs new toggle picture box.
 </summary>
</member><member name="M:Rae.Ui.Controls.TogglePictureBox.Toggle">
	<summary>
 Toggles image and cursor
 </summary>
</member><member name="M:Rae.Ui.Controls.TogglePictureBox.OnClick(System.Object,System.EventArgs)">
	<summary>
 Handles click event. Toggles image.
 </summary>
</member><member name="M:Rae.Ui.Controls.TogglePictureBox.OnMouseRollOver(System.Object,System.EventArgs)">
	<summary>
 Event handler that manages image swapping when the mouse hovers over the PictureBox
 </summary>
</member><member name="M:Rae.Ui.Controls.TogglePictureBox.OnMouseRollOut(System.Object,System.EventArgs)">
	<summary>
  Event handler that manages image swapping when the mouse leaves the PictureBox
 </summary>
</member><member name="M:Rae.Ui.Controls.TogglePictureBox.OnToggled">
	<summary>
 Raises <see cref="E:Rae.Ui.Controls.TogglePictureBox.Toggled"/> event.
 </summary>
	<remarks>
 Use this method to raise event rather than raising event directly.
 Protected - Prevents other classes from raising event
 Overridable - Allows derived classes to override implementation.
 </remarks>
</member><member name="M:Rae.Ui.Controls.TogglePictureBox.UpdatesImage">
	<summary>
 Updates image based on mouse location and toggle state.
 </summary>
</member><member name="T:Rae.Ui.Controls.TogglePictureBox">
	<summary>
 Picture box that supports toggling its image by clicking it or by calling its <see cref="M:Rae.Ui.Controls.TogglePictureBox.Toggle"/> method and also supports rollover effects.
 </summary>
	<history by="Casey Joyce" start="2006/04/12" finish="2006/04/13" hours="5">
 Designed, Developed
 </history>
</member><member name="E:Rae.Ui.Validation.ValidationControl.Validating">
	<summary>Allows custom validation to run besides validators
 </summary>
	<remarks>Add a message to the error message list if the control is found to be invalid.
 Event is raised after the validators Validate() method is executed.
 </remarks>
</member><member name="M:Rae.Ui.Validation.ValidationControl.#ctor(System.Windows.Forms.Control)">
	<summary>Constructs a new validation control for the controlToValidate 
 parameter
 </summary>
	<param name="controlToValidate">Control to validate
 </param>
	<remarks>Also constructs lists
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Ui.Validation.ValidationControl.Validate">
	<summary>Validates control and returns is valid property
 </summary>
	<returns>Boolean indicating whether or not control is valid
 </returns>
	<remarks>Sets IsValid property. Sets error provider's error message.
 Validates each of the control's validators.
 </remarks>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="M:Rae.Ui.Validation.ValidationControl.Validator_Added(Rae.Ui.Validation.Validator)">
	<summary>Handles validator added to list
 </summary>
	<param name="validator">Validator that was added
 </param>
	<history>[Casey.Joyce]	6/6/2005	Created
 </history>
</member><member name="P:Rae.Ui.Controls.TransparentPictureBox.ImageList">
	<summary>
 Image list containg image to show.
 </summary>
</member><member name="P:Rae.Ui.Controls.TransparentPictureBox.ImageListIndex">
	<summary>
 ImageListIndex
 </summary>
</member><member name="P:Rae.Ui.Controls.TransparentPictureBox.TransparentColor">
	<summary>
 Transparent color in image list.
 </summary>
</member><member name="T:Rae.Ui.Controls.TransparentPictureBox">
	<summary>
 Allows an image to be selected from an image list (and have its transparent color set) or selected from resources.
 </summary>
	<remarks>
 Being able to select an image from an image list, adds the ability to select a transparent color as well.
 </remarks>
	<history by="Casey Joyce" finish="2006/06/26" hours="1">
 Created
 </history>
</member><member name="F:Rae.Ui.MessageBox.Caption">
	<summary>The text shown in the upper caption in the message box
 </summary>
	<remarks>Only needs to be set once.
 </remarks>
</member><member name="M:Rae.Ui.MessageBox.Show(System.String)">
	<summary>Shows a message box with the message parameter
 </summary>
	<param name="message">Message shown in message box
 </param>
	<returns>Dialog result
 </returns>
	<remarks>Displays the shared caption string at the top, an ok button and
 an error icon
 </remarks>
	<history>[CASEYJ]	6/2/2005	Created
 </history>
</member><member name="M:Rae.Ui.MessageBox.Show(System.String,System.Windows.Forms.MessageBoxIcon)">
	<summary>Shows message and icon in message box
 </summary>
	<param name="message">Message to show in message box
 </param>
	<param name="icon">Icon to show in message box
 </param>
	<returns>Dialog result
 </returns>
	<remarks>Show global caption and ok button in message box as well.
 </remarks>
	<history>[CASEYJ]	6/2/2005	Created
 </history>
</member><member name="T:Rae.Ui.MessageBox">
	<summary>Contains methods to display message box
 </summary>
	<remarks>Assumes button is ok. Allows you to initialize the caption for all 
 message boxes using the Caption field.
 </remarks>
</member><member name="F:Rae.Ui.YesNoBox.Caption">
	<summary>The text shown in the upper caption in the message box
 </summary>
	<remarks>Only needs to be set once.
 </remarks>
	<history>[JOSHH]	4/18/2007	Created
 </history>
</member><member name="M:Rae.Ui.YesNoBox.Show(System.String)">
	<summary>Shows a message box with the message parameter
 </summary>
	<param name="message">Message shown in Yes / No box
 </param>
	<returns>Dialog result
 </returns>
	<remarks>Displays the shared caption string at the top, an ok button and
 an error icon
 </remarks>
	<history>[JOSHH]	4/18/2007	Created
 </history>
</member><member name="M:Rae.Ui.YesNoBox.Show(System.String,System.Windows.Forms.MessageBoxIcon)">
	<summary>Shows message and icon in message box
 </summary>
	<param name="message">Message to show in message box
 </param>
	<param name="icon">Icon to show in message box
 </param>
	<returns>Dialog result
 </returns>
	<remarks>Show global caption and ok button in message box as well.
 </remarks>
	<history>[JOSHH]	4/18/2007	Created
 </history>
</member><member name="T:Rae.Ui.YesNoBox">
	<summary>Contains methods to display yes no question box
 </summary>
	<remarks>Yes / No dialog. Allows you to initialize the caption for all 
 message boxes using the Caption field.
 </remarks>
	<history>[JOSHH]	4/18/2007	Created
 </history>
</member>
</members>
</doc>