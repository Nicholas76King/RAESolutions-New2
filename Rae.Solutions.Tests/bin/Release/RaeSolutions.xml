<?xml version="1.0"?>
<doc>
<assembly>
<name>
RaeSolutions
</name>
</assembly>
<members>
<member name="T:Rae.RaeSolutions.StandardOptionGrid">
	<summary>Specialized grid for displaying standard options</summary>
</member><member name="M:Rae.RaeSolutions.ExceptionHandling.GlobalExceptionHandler.HandleGlobalException(System.Object,System.Threading.ThreadExceptionEventArgs)">
	<summary>Handles global exception
 </summary>
	<param name="source">Source of the exception
 </param>
	<param name="e">Contains exception
 </param>
	<remarks>Displays message box describing error, and allows user to choose
 to continue or exit application.
 </remarks>
	<history>[CASEYJ]	6/8/2005	Created
 </history>
</member><member name="T:Rae.RaeSolutions.ExceptionHandling.GlobalExceptionHandler">
 Project	 : RAESolutions
 Class	 : RAESolutions.ExceptionHandling.GlobalExceptionHandler
 
 <summary>Contains method to handle unhandled global exceptions
 </summary>
	<remarks>Allows user to choose whether or not to continue the application
 </remarks>
	<history>[CASEYJ]	6/8/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.PriceSheetForm.#ctor(System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
	<summary>Use this constructor because the parameters are necessary.</summary>
	<param name="authorizedDivisions">Divisions that the user is authorized for</param>
	<param name="user">Name that identifies the user creating the price sheets</param>
	<param name="app">Name of the application being used to create price sheets</param>
	<param name="version">Version of the application being used to create price sheets</param>
</member><member name="F:Rae.RaeSolutions.PriceSheetForm.SplitValue.HiddenValue">
	<summary>Abbreviation of division.</summary>
</member><member name="F:Rae.RaeSolutions.PriceSheetForm.SplitValue.DisplayValue">
	<summary>Name of division.</summary>
</member><member name="M:Rae.RaeSolutions.PriceSheetForm.SplitValue.ToString">
	<summary>Displayed value</summary>
</member><member name="T:Rae.RaeSolutions.PriceSheetForm.SplitValue">
	<summary>
 Division of RAE Corporation (eg Century Refrigeration and Technical Systems).
 </summary>
</member><member name="P:Rae.RaeSolutions.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Rae.RaeSolutions.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Rae.RaeSolutions.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Rae.RaeSolutions.SaveOldRevisionAsRevisionForm.saveAndRevisionButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles save and revision button's click event. 
 Hides form (if is valid) or alerts user (if is not valid).
 </summary>
</member><member name="M:Rae.RaeSolutions.SaveOldRevisionAsRevisionForm.cancelButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles cancel button's click event. Cancels and hides form.
 </summary>
</member><member name="T:Rae.RaeSolutions.SaveOldRevisionAsRevisionForm">
	<summary>
 Form to get project and equipment name from user.
 </summary>
</member><member name="M:Rae.RaeSolutions.OpenProjectForm.setProject(System.Int32)">
	<summary>
 Sets text box text and tag. This info is used after the form is closed.
 </summary>
	<param name="row">
 Index of row to use for project info
 </param>
</member><member name="M:Rae.RaeSolutions.OpenProjectForm.openSelectedProject">
	<summary>
 Opens the selected project
 </summary>
	<remarks>
 The parent of this form is expected to use the selected information to open the project
 </remarks>
</member><member name="M:Rae.RaeSolutions.key_code.is_number(System.Windows.Forms.Keys)">
	<summary>True if a number or a minus sign key is pressed</summary>
</member><member name="P:Rae.RaeSolutions.LoggerBase.LogFile">
 -----------------------------------------------------------------------------
 <summary>
 File information for the application usage log.
 </summary>
	<value>File information for the application usage log.</value>
	<remarks>
 Provides file information such as:
 <para>* file existance</para>
		<para>* file size</para>
		<para>* file extension, directory, filename, etc.</para>
	</remarks>
	<history>
 	[CASEYJ]	3/9/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.LoggerBase.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Ensures the log file exists.
 </summary>
	<param name="logFilePath"></param>
	<remarks>
 If log does not exist, a new log is created with the appropriate initial text.
 </remarks>
	<history>
 	[CASEYJ]	3/9/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.LoggerBase.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Basic constructor.
 </summary>
	<remarks>
 Does not contain any code. Helps prevent error during inheritance.
 </remarks>
	<history>
 	[CASEYJ]	3/14/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.LoggerBase.GetLog">
 -----------------------------------------------------------------------------
 <summary>
 Returns a dataset with the log data.
 </summary>
	<returns>Returns a dataset with the log data</returns>
	<remarks>
 The data includes application and form usage as well as user information.
 </remarks>
	<history>
 	[CASEYJ]	3/10/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.LoggerBase.DeleteLog">
	<summary>Deletes local log file.
 </summary>
	<remarks>
 Delete the local file after its entries have been copied to a remote 
 database; otherwise, redundant log entries will be stored remotely.
 </remarks>
	<history>[CASEYJ]	3/10/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.LoggerBase.EnsureLogExist">
 -----------------------------------------------------------------------------
 <summary>
 Creates log if it does not exist.
 </summary>
	<remarks>
 Used by New method.
 </remarks>
	<history>
 	[CASEYJ]	3/9/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:Rae.RaeSolutions.LoggerBase">
 -----------------------------------------------------------------------------
 Project	 : RAESolutions
 Class	 : RAESolutions.LoggerBase
 
 -----------------------------------------------------------------------------
 <summary>
 Base class for loggers.
 </summary>
	<remarks>
 Provides methods to get the log and delete the log.
 </remarks>
	<history>
 	[CASEYJ]	3/14/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.Updater.CheckForNewVersion(System.String,System.Boolean)">
	<summary>Updates application if a newer version is available and returns true if appication must exit.
 </summary>
	<param name="txtFileName">Name of the file containing the list of update files
 </param>
	<param name="UpdateRightNow">Indicates whether or not to update right now
 </param>
	<returns>Boolean indicating whether or not to close application
 </returns>
	<history>[CASEYJ]	8/24/2005	Created
 </history>
</member><member name="T:Rae.RaeSolutions.EquipmentGridColumns">
	<summary>
 Equipment grid's column names.
 </summary>
	<history by="Casey Joyce" finish="2006/07/17">
 Created
 </history>
</member><member name="F:Rae.RaeSolutions.EquipmentSelector.choose">
	<summary>Text to prompt user to make a selection</summary>
</member><member name="P:Rae.RaeSolutions.EquipmentSelector.EquipmentType">
	<summary>Equipment type</summary>
</member><member name="P:Rae.RaeSolutions.EquipmentSelector.Division">
	<summary>Company division that equipment is in</summary>
</member><member name="P:Rae.RaeSolutions.EquipmentSelector.Equipment">
	<summary>Selected equipment name (the series and model combined)</summary>
</member><member name="P:Rae.RaeSolutions.EquipmentSelector.Series">
	<summary>Selected equipment series as string</summary>
</member><member name="P:Rae.RaeSolutions.EquipmentSelector.Model">
	<summary>Selected equipment model</summary>
</member><member name="P:Rae.RaeSolutions.EquipmentSelector.IsCompleted">
	<summary>Indicates whether the equipment is completely selected.</summary>
</member><member name="P:Rae.RaeSolutions.EquipmentSelector.ShowBorder">
	<summary>Shows border around control if true; sets border to none if false</summary>
</member><member name="E:Rae.RaeSolutions.EquipmentSelector.BeforeSeriesChanged">
	<summary>Raised before series changes, allows series change to be canceled</summary>
</member><member name="E:Rae.RaeSolutions.EquipmentSelector.SeriesChanged">
	<summary>Raises after series changes and model list is filled</summary>
</member><member name="E:Rae.RaeSolutions.EquipmentSelector.ModelChanged">
	<summary>Raises after model changes</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentSelector.EquipmentSelector_Load(System.Object,System.EventArgs)">
	<summary>Handles control load</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentSelector.cboSeries_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>Handles series change</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentSelector.cboModel_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>Handles model change</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentSelector.populate_series">
	<summary>Populates equipment series and sets choose as default</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentSelector.populateModels">
	<summary>Populates models and sets choose as default</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentSelector.setImageToSelected">
	<summary>Sets image to symbol indicating the equipment is selected.</summary>
</member><member name="T:Rae.RaeSolutions.EquipmentSelector">
	<summary>Control used to select equipment</summary>
	<remarks>WARNING: will only work in EquipmentForm. It is getting division from EquipmentForm.</remarks>
</member><member name="M:Rae.RaeSolutions.ProjectForm.releaseNumTextBox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
	<summary>
 Handles release number text box key press event.
 Allows only numbers to be entered as the release number.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectForm.initializeSaveToolStripPanel">
	<summary>Initializes save tool strip panel. Sets event handlers and tool strip.</summary>
</member><member name="M:Rae.RaeSolutions.ProjectForm.show_cover_page(System.Boolean,System.String@)">
	<summary>Opens submittal cover page report</summary>
</member><member name="M:Rae.RaeSolutions.ProjectForm.cboReleaseStatus_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Handles release status combobox selected index changed event.
 Shows project id if status is 'Project' or shows release number if status is 'HR' or 'PR'
 </summary>
</member><member name="P:Rae.RaeSolutions.cu_uc_balance_window.CurrentRevision">
	<summary>
 The current revision # of process being displayed on this form.
 </summary>
</member><member name="P:Rae.RaeSolutions.cu_uc_balance_window.LatestRevision">
	<summary>
 The latest revision # of process being displayed on this form.
 </summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.Strings.CannotViewReportDatabaseConnectionFailed(System.String,System.String)">
	<summary>
 Report cannot be opened. The attempt to set the database connection for the report failed.
 </summary>
	<param name="databasePath">
 Path to database that report is trying to open.
 </param>
	<param name="exceptionMessage">
 Exception message thrown
 </param>
</member><member name="P:Rae.RaeSolutions.cu_uc_balance_window.CondensingUnitRating">
	<summary>
 CondensingUnitRating
 </summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.Me_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>Asks user if they want to save.</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.findCondensingUnitsButton_Click(System.Object,System.EventArgs)">
	<summary>Handles Find Condensing Units button click event
 </summary>
	<remarks>Finds condensing units that match inputs and sets appropriate 
 controls
 1. set number of rooms and room temperature (not for dll)
 INPUTS **************************************
 2. set dll condensing unit series
 3. set dll condenser capacity
 4. set dll ambient and suction temperature
 5. set dll refrigerant type
 6a)set dll compressor type and b) dll # of compressors per unit
 7. set dll number of circuits per condensing unit
 8. set dll altitude
 9. set dll company division
 OUTPUTS *************************************
 1. fill condensing unit description, condensing unit capacity and condenser capacity
 2. format condensing units' radiobutton appearance
 </remarks>
	<history>[CASEYJ]	6/13/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.unit_coolers_grid_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>Handles a data cell in the datagrid being clicked</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.lblErrors_TextChanged(System.Object,System.EventArgs)">
	<summary>Handles error label's TextChanged event</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.refrigerantComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>Handles refrigerant combobox SelectedIndexChanged event</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.btnUnitCoolIncr_Click(System.Object,System.EventArgs)">
	<summary>Handles unit cooler datagrid's increment height button click event
 </summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.btnUnitCoolGridDecr_Click(System.Object,System.EventArgs)">
	<summary>Handles unit cooler datagrid's decrement height button click event</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.btnBalaGridIncr_Click(System.Object,System.EventArgs)">
	<summary>Handles results datagrid's increment height button click event
 </summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.btnBalaGridDecr_Click(System.Object,System.EventArgs)">
	<summary>Handles results datagrid's decrement height button click event
 </summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.picError_DoubleClick(System.Object,System.EventArgs)">
	<summary>Adjusts footer's height</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtSuctionTemp_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates suction temperature text box
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtCondensingUnitsRequired_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates number of condensing units text box
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtAltitude_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates altitude text box
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtCapacityRequired_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates capacity text box
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtRunTimeHours_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates run time text box
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtAmbientTemp_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates ambient temperature text box
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtRoomTemp_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates room temperature text box
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtUnitCooler1Quantity_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates number of unit coolers of the first model type
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtUnitCooler2Quantity_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates number of unit coolers of the second model type
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtUnitCooler3Quantity_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>Validates number of unit coolers of the third model type
 </summary>
	<history>[CASEYJ]	6/6/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.txtCustomUnitCoolerCapacity_TextChanged">
	<summary>Handles Custom Unit Cooler's Quantity or Capacity textbox 
 Textchanged event</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.chkCustomUnitCooler_CheckedChanged">
	<summary>Handles Custom Unit Cooler checkbox CheckChanged event</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.FormatCondensingUnits">
	<summary>Determines condensing unit's visibility and check state.
 </summary>
	<history>[CASEYJ]	5/31/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.SaveControls(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Saves control values to new UnitCoolerProcessItem
 and compares to existing UnitCoolerProcessItem (if exists)
 to determine if we need to query user as to revise, update, etc...
 </summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.setDivisionSpecificControls">
	<summary>Sets controls that are dependent upon the division used to login</summary>
	<remarks>TSI's capacity unit is Tons. Century's capacity unit is BTUH.</remarks>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.IsSuctionTemperatureInValidRange(System.Single)">
	<summary>Checks if entered suction temperature is valid
 </summary>
	<returns>Boolean indicating whether or not suction temperature is valid
 </returns>
	<remarks>Checks that entered suction temperature is within the valid 
 temperature range.
 </remarks>
	<history>[CASEYJ]	5/31/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.ClearCondensingUnits">
	<summary>Clears text in condensing unit and condensing unit's capacity controls.</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.showRateSystemMessage">
	<summary>
 Shows message box indicating a control necessary to rate system has been changed
 </summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.RevisionView_RevisionChanged(Rae.RaeSolutions.RevisionView,Rae.ValueChangedEventArgs{System.Single})">
	<summary>
 Handles revision view control's revision changed event.
 If user has unsaved changes, asks user to save before navigating revisions.
 </summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.grab_condenser_capacity_per_degree">
	<summary>Grabs condenser capacity per degree from user interface control
 </summary>
	<remarks>For standard units the condenser capacity per degree control is set
 by the condensing unit dll which calls the cofan dll
 </remarks>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.ClearUnitCooler1">
	<summary>Clears unit cooler 1's row of controls</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.ClearUnitCooler2">
	<summary>Clears unit cooler 2's row of controls</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.ClearUnitCooler3">
	<summary>Clears unit cooler 3's row of controls</summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.PrintForm">
	<summary>
 Opens print preview of balance form.
 </summary>
</member><member name="M:Rae.RaeSolutions.cu_uc_balance_window.balance_system">
	<summary>Balances system and sets grid to results.</summary>
</member><member name="T:Rae.RaeSolutions.cu_uc_balance_window">
	<summary>Unit cooler and condensing unit balance form.</summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionGrid.SetColumnWidths">
	<summary>Sets column widths</summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionGrid.ApplyStyle">
	<summary>Applies visual style</summary>
</member><member name="T:Rae.RaeSolutions.SpecialOptionGrid">
	<summary>
 Specialized grid for displaying special options
 </summary>
</member><member name="F:Rae.RaeSolutions.Location.s">
	<summary>Separator</summary>
</member><member name="T:Rae.RaeSolutions.Location">
	<summary>
 Location of a folder or file
 </summary>
</member><member name="P:Rae.RaeSolutions.Persistence.NavigationController.Item">
	<summary>
 Item whose revisions can be navigated. Also sets the navigator's Item property.
 </summary>
</member><member name="M:Rae.RaeSolutions.MainForm.MainStatus_Click">
	<summary>
 Handles main status strip click event.
 Shows tool tip
 </summary>
</member><member name="M:Rae.RaeSolutions.MainForm.initializeAssemblies">
	<summary>
 Initializes assemblies that RaeSolutions is dependent on.
 </summary>
</member><member name="M:Rae.RaeSolutions.MainForm.initializeControls">
	<summary>
 Initializes control values.
 </summary>
</member><member name="M:Rae.RaeSolutions.MainForm.updateEmployee">
	<summary>
 Updates application for employees and returns decision on whether to continue or exit application.
 </summary>
</member><member name="M:Rae.RaeSolutions.MainForm.checkExpirationDate">
	<summary>
 Determines if application is expired and returns terminal decision. 
 Warns user if expiration date is approaching soon.
 </summary>
</member><member name="M:Rae.RaeSolutions.MainForm.show_inside_main_screen(System.Windows.Forms.Form)">
	<summary>Shows form in MDI container.</summary>
</member><member name="M:Rae.RaeSolutions.MainForm.OnProjectSet(Rae.RaeSolutions.Business.Entities.project_manager,System.EventArgs)">
	<summary>
 Handles project manager's project set event. Initializes project dependent controls.
 </summary>
</member><member name="M:Rae.RaeSolutions.MainForm.Equipment_Added(Rae.Collections.EventfulList{Rae.RaeSolutions.Business.Entities.EquipmentItem},Rae.Collections.ListItemAddedEventArgs)">
	<summary>
 Handles equipment added event. Views equipment.
 </summary>
</member><member name="T:Rae.RaeSolutions.MainForm">
	<summary>Main MDI form.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.#ctor">
	<summary>Constructs equipment list view.</summary>
</member><member name="P:Rae.RaeSolutions.EquipmentListView.Equipment">
	<summary>Equipment to display.</summary>
</member><member name="P:Rae.RaeSolutions.EquipmentListView.SelectedEquipment">
	<summary>Gets the selected equipment in the list. 
 Gets null if there is not selected equipment.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.EquipmentListView_Load(System.Object,System.EventArgs)">
	<summary>Event handler for equipment list view load event.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.mnuItemOptions_Opened(System.Object,System.EventArgs)">
	<summary>Event handler for context menu opened event.
 Displays selected equipment name so that the user will no which equipment the options apply to.
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.mnuNew_Click(System.Object,System.EventArgs)">
	<summary>Handles context menu new clicked event. 
 Begins process for user to create equipment.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.grdEquipment_DoubleClick(System.Object,System.EventArgs)">
	<summary>Handles grid double click event. Views selected equipment.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.equipment_Saved(Rae.RaeSolutions.Business.Entities.EquipmentItem,System.EventArgs)">
	<summary>Handles equipment saved event. 
 Updates values in the row corresponding to the saved equipment.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.grdEquipment_CellValueChanged(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 Handles grid's cell value changed event.
 Updates data source with new 'IsIncluded' value.
 </summary>
	<remarks>
 The DataGridView.CellValueChanged event occurs when the user-specified value is committed, 
 which typically occurs when focus leaves the cell.
 In the case of check box cells, however, you will typically want to handle the change immediately. 
 To commit the change when the cell is clicked, you must handle the DataGridView.CurrentCellDirtyStateChanged event. 
 In the handler, if the current cell is a check box cell, call the DataGridView.CommitEdit method and pass in the Commit value.
 - MSDN Documentation
 </remarks>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.grdEquipment_CurrentCellDirtyStateChanged(System.Object,System.EventArgs)">
	<summary>
 Handles grid's current cell dirty state changed event.
 Commits check box column changes immediately.
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.popupRename">
	<summary>Pops up form to rename selected equipment, and renames equipment.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.addToGrid(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Adds equipment item to grid.</summary>
	<param name="equip">Equipment item to add to grid.</param>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.addToGrid(Rae.RaeSolutions.Business.Entities.EquipmentItemList)">
	<summary>Adds equipment items in list to grid.</summary>
	<param name="list">Equipment item list to add to grid.</param>
</member><member name="M:Rae.RaeSolutions.EquipmentListView.getRowIndex(System.String)">
	<summary>Gets index of row containing the ID. Returns -1 if row does not exist.</summary>
	<param name="id">Equipment ID to look for.</param>
</member><member name="T:Rae.RaeSolutions.EquipmentListView">
	<summary>Equipment list view is a quick view of equipment in project.</summary>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.#ctor">
	<remarks/>
</member><member name="E:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendNewOrderEmailCompleted">
	<remarks/>
</member><member name="E:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendFileCompleted">
	<remarks/>
</member><member name="E:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendFileBase64Completed">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendNewOrderEmail(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.BeginSendNewOrderEmail(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.EndSendNewOrderEmail(System.IAsyncResult)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendNewOrderEmailAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendNewOrderEmailAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendFile(System.Byte[],System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.BeginSendFile(System.Byte[],System.String,System.String,System.String,System.AsyncCallback,System.Object)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.EndSendFile(System.IAsyncResult)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendFileAsync(System.Byte[],System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendFileAsync(System.Byte[],System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendFileBase64(System.String,System.Int32,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.BeginSendFileBase64(System.String,System.Int32,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.EndSendFileBase64(System.IAsyncResult)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendFileBase64Async(System.String,System.Int32,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.SendFileBase64Async(System.String,System.Int32,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Rae.RaeSolutions.OrderPlacementWS.TransferFile.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:Rae.RaeSolutions.OrderPlacementWS.TransferFile">
	<remarks/>
</member><member name="T:Rae.RaeSolutions.OrderPlacementWS.SendNewOrderEmailCompletedEventHandler">
	<remarks/>
</member><member name="T:Rae.RaeSolutions.OrderPlacementWS.SendFileCompletedEventHandler">
	<remarks/>
</member><member name="P:Rae.RaeSolutions.OrderPlacementWS.SendFileCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Rae.RaeSolutions.OrderPlacementWS.SendFileCompletedEventArgs">
	<remarks/>
</member><member name="T:Rae.RaeSolutions.OrderPlacementWS.SendFileBase64CompletedEventHandler">
	<remarks/>
</member><member name="P:Rae.RaeSolutions.OrderPlacementWS.SendFileBase64CompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Rae.RaeSolutions.OrderPlacementWS.SendFileBase64CompletedEventArgs">
	<remarks/>
</member><member name="P:Rae.RaeSolutions.air_cooled_chiller_balance_window.CurrentRevision">
	<summary>The current revision # of process being displayed on this form.</summary>
</member><member name="P:Rae.RaeSolutions.air_cooled_chiller_balance_window.LatestRevision">
	<summary>The latest revision # of process being displayed on this form.</summary>
</member><member name="M:Rae.RaeSolutions.air_cooled_chiller_balance_window.initializeSaveToolStripPanel">
	<summary>Initializes save tool strip panel. Sets event handlers and tool strip.</summary>
</member><member name="M:Rae.RaeSolutions.air_cooled_chiller_balance_window.fillComboboxes">
	<summary>Fills comboboxes with display and hidden values</summary>
</member><member name="M:Rae.RaeSolutions.air_cooled_chiller_balance_window.setCondenserCapacity(System.Int32)">
	<summary>Calculates and fills condenser coil capacity controls for either circuit 1 or 2 using cofan dll</summary>
</member><member name="M:Rae.RaeSolutions.air_cooled_chiller_balance_window.fillResultsGrid">
	<remarks>
 Only called once (in CalculatePage)
 </remarks>
</member><member name="M:Rae.RaeSolutions.air_cooled_chiller_balance_window.RevisionView_RevisionChanged(Rae.RaeSolutions.RevisionView,Rae.ValueChangedEventArgs{System.Single})">
	<summary>
 Handles revision view control's revision changed event.
 If user has unsaved changes, asks user to save before navigating revisions.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectListForm.setProject(System.Int32)">
	<summary>
 Sets text box text and project ID property. This info is used after the form is closed.
 </summary>
	<param name="row">
 Index of row to use for project info
 </param>
</member><member name="P:Rae.RaeSolutions.BoxLoadListView.BoxLoads">
	<summary>
 List of box loads to show in control
 </summary>
</member><member name="M:Rae.RaeSolutions.BoxLoadListView.Link(System.String)">
	<summary>
 Sets checkmark to show box load is linked
 </summary>
	<param name="itemId">
 Item ID of box load to check
 </param>
</member><member name="M:Rae.RaeSolutions.BoxLoadListView.Unlink(System.String)">
	<summary>
 Unchecks checkmark to show box load is not linked
 </summary>
	<param name="itemId">
 Item ID of box load to uncheck
 </param>
</member><member name="M:Rae.RaeSolutions.BoxLoadListView.BoxLoadListView_Load(System.Object,System.EventArgs)">
	<summary>
 Event handler for process list view load event.
 </summary>
</member><member name="M:Rae.RaeSolutions.BoxLoadListView.mnuOpen_Click(System.Object,System.EventArgs)">
	<summary>
 Handles context menu open clicked event. Opens equipment.
 </summary>
</member><member name="M:Rae.RaeSolutions.BoxLoadListView.mnuNew_Click(System.Object,System.EventArgs)">
	<summary>
 Handles context menu new clicked event. Begins process for user to create process.
 </summary>
</member><member name="P:Rae.RaeSolutions.FluidCoolerForm.CurrentRevision">
	<summary>
 The current revision # of process being displayed on this form.
 </summary>
</member><member name="P:Rae.RaeSolutions.FluidCoolerForm.LatestRevision">
	<summary>
 The latest revision # of process being displayed on this form.
 </summary>
</member><member name="T:Rae.RaeSolutions.reports.file_paths">
	<summary>File paths of reports.</summary>
</member><member name="P:Rae.RaeSolutions.SuggestedOptionsForm.AddOption">
	<summary>
 AddOption
 </summary>
</member><member name="P:Rae.RaeSolutions.RepAirCooledChillerForm.AmbientTemp">
	<summary>Ambient temperature bound to the associated text box.</summary>
</member><member name="P:Rae.RaeSolutions.RepAirCooledChillerForm.LeavingFluidTemp">
	<summary>Leaving fluid temperature bound to the associated text box.</summary>
</member><member name="M:Rae.RaeSolutions.RepAirCooledChillerForm.initializeSaveToolStripPanel">
	<summary>
 Initializes save tool strip panel. Sets event handlers and tool strip.
 </summary>
</member><member name="M:Rae.RaeSolutions.RepAirCooledChillerForm.RevisionView_RevisionChanged(Rae.RaeSolutions.RevisionView,Rae.ValueChangedEventArgs{System.Single})">
	<summary>
 Handles revision view control's revision changed event.
 If user has unsaved changes, asks user to save before navigating revisions.
 </summary>
</member><member name="M:Rae.RaeSolutions.RepAirCooledChillerForm.fillRefrigerants">
	<summary>
 DisplayMember: refrigerant name
 ValueMember: short refrigerant name
 </summary>
</member><member name="M:Rae.RaeSolutions.RepAirCooledChillerForm.InitializeValidation">
	<summary>Initializes validation utilities (managers, controls, and validators).</summary>
</member><member name="M:Rae.RaeSolutions.RepAirCooledChillerForm.SetControlsVisibility">
	<summary>Sets control visibility base on authorization level
 </summary>
</member><member name="M:Rae.RaeSolutions.SaveBeforeNavigatingRevisionsForm.saveAndRevisionButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles save and revision button's click event. 
 Hides form (if is valid) or alerts user (if is not valid).
 </summary>
</member><member name="M:Rae.RaeSolutions.SaveBeforeNavigatingRevisionsForm.cancelButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles cancel button's click event. Cancels and hides form.
 </summary>
</member><member name="T:Rae.RaeSolutions.SaveBeforeNavigatingRevisionsForm">
	<summary>
 Form to get project and equipment name from user.
 </summary>
</member><member name="T:Rae.RaeSolutions.NewItemForm2">
	<summary>Form to get project, equipment and selection names from user.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.buildSpecsControl(Rae.RaeSolutions.Business.EquipmentType)">
	<summary>Gets the specs control for the equipment type.</summary>
	<param name="equipType">Equipment type</param>
</member><member name="P:Rae.RaeSolutions.EquipmentForm.LastSavedState">
	<summary>The last saved state of equipment</summary>
	<remarks>Save and open automatically set the current equipment to the last saved state</remarks>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.Equipment_NameChanged(Rae.RaeSolutions.Business.Entities.ItemBase,System.EventArgs)">
	<summary>
 Handles equipment name changed event. Updates form's title.
 </summary>
	<history by="Casey Joyce" finish="2006/08/04">
 Added
 </history>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.addHandlerForEquipmentNameChanged">
	<summary>
 Adds handler for equipment name changed event.
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.removeHandlerForEquipmentNameChanged">
	<summary>Removes handler for equipment name changed event.</summary>
	<remarks>
 Handler must be removed otherwise when form opens again, the handler will be registered again,
 and the event handler method will be called multiple times.
 </remarks>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.RevisionView_RevisionChanged(Rae.RaeSolutions.RevisionView,Rae.ValueChangedEventArgs{System.Single})">
	<summary>
 Handles revision view control's revision changed event.
 If user has unsaved changes, asks user to save before navigating revisions.
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.EquipmentSelector1_SeriesChanged(Rae.RaeSolutions.EquipmentSelector,System.ComponentModel.CancelEventArgs@)">
	<summary>Handles equipment series before change</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.cboParMultiplier_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>Handles PAR multiplier change</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.cboUnitVoltage_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>Handles unit voltage changed</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.availableOpTable_ColumnChanging(System.Object,System.Data.DataColumnChangeEventArgs)">
	<summary>Handles available options selections and deselections. Performs additional logic for options
 that have dependents or are dependents.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.availableOpTable_ColumnChanged(System.Object,System.Data.DataColumnChangeEventArgs)">
	<summary>Handles availableOptionsTable's ColumnChanged event. 
 Adds selected option to selected options grid, or removes deselected option from selected options grid.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.closeMenuItem_Click(System.Object,System.EventArgs)">
	<summary>Handles close menu item click</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.saveMenuItem_Click(System.Object,System.EventArgs)">
	<summary>Handles save menu item click</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.saveAsMenuItem_Click(System.Object,System.EventArgs)">
	<summary>
 Handles save as menu item click event.
 Copies equipment and saves using name chosen by user.
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.saveAsRevisionMenuItem_Click(System.Object,System.EventArgs)">
	<summary>
 Handles save as revision menu item click event.
 Saves equipment and sets its revision level as the latest.
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.orderWriteUpMenuItem_Click">
	<summary>Handles order entry order write up report menu clicked</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.submittalMenuItem_Click(System.Object,System.EventArgs)">
	<summary>Handles submittal accessories report menu clicked</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.specialOptionsTotalPrice_Changed(Rae.RaeSolutions.SpecialOptionsControl,System.Double)">
	<summary>
 Handles event raised when special options total price changed.
 </summary>
	<history by="Casey Joyce" finish="2006/06/05">
 Added</history>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.SpecialOptionsControl_DataSourceChanged(Rae.RaeSolutions.SpecialOptionsControl,System.EventArgs)">
	<summary>
 Handles special options grid data source changed event.
 Synchronizes special options grids on summary and special options tabs.
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.txtOthers_Leave(System.Object,System.EventArgs)">
	<summary>
 Handles cost textbox leave events.
 Calculates prices.
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.handleSelectAvailableOp(System.Data.DataColumnChangeEventArgs@)">
	<summary>Handles available options being selected, namely receivers and their dependent options</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.handleDeselectAvailableOp(System.Data.DataColumnChangeEventArgs@)">
	<summary>Handles available options being deselected, namely receivers</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.reselectOpsAfterModelOrVoltageChange">
	<summary>
 Populates all (available, standard and selected) option grids based on selected model and voltage
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.getOptionsTableStructure">
	<summary>Returns table structure for options</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.convertSelectedVoltageDependentOptions">
	<summary>
 Converts selected voltage dependent options to correct voltage
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.selectOptions">
	<summary>Selects options in grid</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.populateAvailableOptionsGrid">
	<summary>Populates and formats available options grid</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.populateStandardOptionsGrid">
	<summary>Populates and formats standard options grid</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.GrabPercent(System.Windows.Forms.Control)">
	<summary>
 Grabs value shown as a percent and returns value as a decimal.
 </summary>
	<param name="control">Control to grab percent from.</param>
	<returns>Decimal representation of percent.</returns>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.GrabCommissionRate">
	<summary>Grabs commission rate from PAR multiplier combobox value, not commission rate label text
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.calculateAndDisplayPrices">
	<summary>
 Calculates pricing (particularly commission needs to be calculated if not already)
 </summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.displayPrice(System.Windows.Forms.Control,System.Double)">
	<summary>Displays formatted price</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.initializeSaveToolStripPanel">
	<summary>Initializes save tool strip panel. Sets event handlers and tool strip.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.loadCondensingUnitData(System.String)">
	<summary>Sets control values that are static for a specific condensing unit model.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.LoadFluidCoolerData(System.String,System.String)">
	<summary>loads fluid cooler data.</summary>
	<param name="FluidCoolerModel"></param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.IsItemSelected(System.Windows.Forms.ComboBox)">
	<summary>Checks whether an item is selected in combobox's items collection</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.validateOptionRetrievalInputs">
	<summary>Validates inputs required to retrieve options</summary>
	<returns>Boolean that is true if the inputs necessary to retrieve options are valid</returns>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.addAdditionalefrigerants">
	<summary>Adds refrigerant, R507a, for Century condensing units.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.parseVoltage(System.String)">
	<summary>Parse voltage from voltage description (Voltage/Phase/Hertz)</summary>
	<param name="voltageDescription">Voltage description formatted as Voltage/Phase/Hertz</param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.isSaved(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>True if equipment is saved (ie is equal to last saved state).</summary>
	<param name="equipment">Equipment item to check if it is saved.</param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.saveInProject(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Saves equipment in project and updates last saved state.</summary>
	<param name="equipment">Equipment to save.</param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.askUserToNameEquipment(System.String@)">
	<summary>Asks user to choose equipment name.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.askUserToNameProjectAndEquipment(System.String@,System.String@)">
	<summary>Asks user to choose a project and equipment name.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.createNewProjectAndEquipment(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Creates equipment in new project and inserts in data source.</summary>
	<param name="equipment">Equipment to insert in data source.</param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.createNewEquipment(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Creates new equipment in project and inserts in data source.</summary>
	<param name="equipment">Equipment to create</param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.createEquipmentFromOldRevision(Rae.RaeSolutions.Business.Entities.EquipmentItem,System.Boolean)">
	<summary>
 Creates equipment from an old revision (revision that is not the latest) and inserts in data source.
 </summary>
	<param name="equipment">Equipment at old revision to set as latest revision.</param>
	<param name="shouldAsk">
 True to ask user before making latest revision; false to revision without saving.
 </param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.createAsNewEquipment(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Creates new equipment with a new name from the specified equipment.</summary>
	<param name="equipment">Equipment to create new equipment from.</param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.save">
	<summary>Saves equipment.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.save(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Saves changes on this form to the shared project.</summary>
	<param name="localEquipment">The current equipment being editted on this form.</param>
	<remarks>Other objects subscribe to the events of the shared, not local object.</remarks>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.saveAs">
	<summary>Saves equipment state as a new item.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.saveAsRevision(System.Boolean)">
	<summary>Saves and sets revision as latest revision.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.saveBeforeNavigatingRevisions(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>
 Asks user to save unsaved changes to the latest revision before navigating revisions.
 </summary>
	<param name="equipmentToSave">Equipment with unsaved changes that user may want to save.</param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.saveOldBeforeNavigatingRevisions(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>
 Asks user to save old revision with changes before navigating revisions.
 </summary>
	<param name="equipmentToSave">
 Equipment that has changed and user may want to save as latest revision.
 </param>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.updateRevisionView">
	<summary>Updates revision view control in main form.</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.populateSelectedOptionsDataSet(System.Boolean)">
	<summary>Populates selected options dataset from the selected options and standard options grids</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.grabEquipment(System.Boolean)">
	<summary>Grabs equipment info from the form</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.displayEquipment(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Displays values from equipment in controls</summary>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.SuggestFourYearCompressorWarranty">
	<summary>
 ask user if they would like to add four year compressor warranty
 </summary>
	<remarks></remarks>
</member><member name="M:Rae.RaeSolutions.EquipmentForm.rowToOption(System.Data.DataRow)">
	<summary>Converts an option row to an option object</summary>
	<param name="optionRow">DataRow to convert to Option object.</param>
	<exception cref="T:System.ArgumentException">Thrown when optionRow can not be converted to option object 
 because of table structure
 </exception>
</member><member name="T:Rae.RaeSolutions.EquipmentForm">
	<summary>Form for selecting and entering equipment information</summary>
</member><member name="M:Rae.RaeSolutions.RowTo.Option(System.Data.DataRow,Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Converts an option row to an option object</summary>
	<param name="optionRow">DataRow to convert to Option object.</param>
	<exception cref="T:System.ArgumentException">Thrown when optionRow can not be converted to option object 
 because of table structure
 </exception>
</member><member name="T:Rae.RaeSolutions.Persistence.AskUserToSave">
	<summary>
 Provides customizable form to present saving options.
 </summary>
	<remarks>
 Basic Format:
 Instructions: Do you want to save?
 Inputs:       Project Name [______]
               Item Name    [______]
 Commands:     [  Save  ]
               [ Cancel ]
 Validates inputs as not null or empty.
 Has custom handling for Cancel button.
 </remarks>
</member><member name="P:Rae.RaeSolutions.Updating.ContactDataStructure.ContactSelectionForm.SelectedContact">
	<summary>
 The selected contact on the form
 </summary>
</member><member name="M:Rae.RaeSolutions.Updating.ContactDataStructure.ContactSelectionForm.Initialize(Rae.RaeSolutions.Business.Entities.Contact)">
	<summary>
 Initializes contact selector form
 </summary>
	<param name="existingContact">
 An existing contact to select in control
 </param>
</member><member name="T:Rae.RaeSolutions.Updating.ContactDataStructure.ContactSelectionForm">
	<summary>
 Form to select a contact on
 </summary>
</member><member name="P:Rae.RaeSolutions.EditContactForm.Contact">
	<summary>
 Contact whose details are displayed in controls
 </summary>
</member><member name="P:Rae.RaeSolutions.EditContactForm.selectedCompany">
	<summary>
 Company of contact
 </summary>
</member><member name="M:Rae.RaeSolutions.EditContactForm.RefreshData">
	<summary>
 Gets contact values from control values; refreshes contact property.
 </summary>
</member><member name="M:Rae.RaeSolutions.EditContactForm.UpdateControls">
	<summary>
 Sets controls based on contact property
 </summary>
</member><member name="M:Rae.RaeSolutions.EditContactForm.Me_Load(System.Object,System.EventArgs)">
	<summary>Handles load event</summary>
</member><member name="M:Rae.RaeSolutions.EditContactForm.btnOk_Click(System.Object,System.EventArgs)">
	<summary>Handles OK button being clicked</summary>
</member><member name="M:Rae.RaeSolutions.EditContactForm.btnCancel_Click(System.Object,System.EventArgs)">
	<summary>Handles Cancel button being clicked</summary>
</member><member name="M:Rae.RaeSolutions.EditContactForm.addCompany">
	<summary>
 Adds company to combobox.
 </summary>
</member><member name="M:Rae.RaeSolutions.EditContactForm.initializeMembers">
	<summary>Initializes members
 </summary>
	<remarks>If properties that need initialization are set before the Load event is raised, 
 they need to be initialized here.
 </remarks>
</member><member name="M:Rae.RaeSolutions.EditContactForm.fillCompanies(System.String)">
	<summary>
 Fills company combobox.
 </summary>
</member><member name="M:Rae.RaeSolutions.EditContactForm.setRepId(System.Int32)">
	<summary>Sets rep id control</summary>
</member><member name="P:Rae.RaeSolutions.ProjectListView.Manager">
	<summary>
 Project manager bound to project list view.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectListView.ProjectListView_Load(System.Object,System.EventArgs)">
	<summary>
 Handles project list view's load event.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectListView.grdProject_DoubleClick(System.Object,System.EventArgs)">
	<summary>
 Handles grid's double click event. Views project info.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectListView.mnuOpen_Click(System.Object,System.EventArgs)">
	<summary>
 Handles menu's open click event.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectListView.mnuProject_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Handles menu opening event. Cancels if project is not open.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectListView.AddProjectToGrid">
	<summary>
 Adds project to grid.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectListView.GetRowIndex(System.String)">
	<summary>
 Gets index of row containing the ID. Returns -1 if row does not exist.
 </summary>
	<param name="id">
 ID to look for.
 </param>
</member><member name="M:Rae.RaeSolutions.ProjectListView.DisplayNoOpenProject">
	<summary>
 Displays no open project for project name.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectListView.DeleteProjectToolStripMenuItem_Click(System.Object,System.EventArgs)">
	<summary>
 deletes open project and all of it's dependencies (equipment, processes, relationships, etc)
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:Rae.RaeSolutions.ProjectListView">
	<summary>
 View of project information.
 </summary>
	<history by="Casey Joyce" start="2006/08/06" finish="2006/08/08">
 Created, only displays name
 </history>
</member><member name="M:Rae.RaeSolutions.mValidator.IsBlank(System.String)">
	<summary>
 Indicates whether or not text parameter is blank
 </summary>
	<param name="text">String to test</param>
	<returns>Boolean indicating whether or not text parameter is blank</returns>
	<remarks>Returns true if text parameter is blank.</remarks>
	<history>
 	[CASEYJ]	6/2/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.mValidator.IsNumber(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Determines if string is a number.
 </summary>
	<param name="text">String that may be a number</param>
	<returns>Boolean indicating whether or not string is a number</returns>
	<remarks>
 Returns true for both integers and decimals. Returns false if parameter
 contains commas.
 </remarks>
	<history>
 	[CASEYJ]	6/2/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.mValidator.IsInteger(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Indicates if text parameter is an integer.
 </summary>
	<param name="text">String to test whether or not it is an integer</param>
	<returns>Boolean indicating whether or not the text parameter is an integer
 </returns>
	<remarks>
 True indicates text parameter is an integer. False indicates it is not an 
 integer. If text parameter includes commas, false is returned.</remarks>
	<history>
 	[CASEYJ]	6/2/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.mValidator.IsDecimal(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Indicates whether or not text parameter is a decimal value less than one
 </summary>
	<param name="text">String to test</param>
	<returns>Boolean indicating whether or not text parameter is a decimal value
 less than one</returns>
	<remarks>
 Text parameter must be less than one, contain a decimal point and all other
 characters must be numbers.
 </remarks>
	<history>
 	[CASEYJ]	6/2/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Rae.RaeSolutions.condenser_rating_screen.CurrentRevision">
	<summary>
 The current revision # of process 
 being displayed on this form.
 </summary>
</member><member name="P:Rae.RaeSolutions.condenser_rating_screen.LatestRevision">
	<summary>
 The latest revision # of process 
 being displayed on this form.
 </summary>
</member><member name="P:Rae.RaeSolutions.condenser_rating_screen.LastSavedState">
	<summary>
 The last saved state of CondenserProcessItem
 </summary>
	<remarks>
 Save and open automatically set the current CondenserProcessItem to the last saved state
 </remarks>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.form_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>Asks user to save changes, if there are unsaved changes.</summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.calculateButton_Click">
	<summary>Calculates values and populates controls.</summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.RevisionView_RevisionChanged(Rae.RaeSolutions.RevisionView,Rae.ValueChangedEventArgs{System.Single})">
	<summary>
 Handles revision view control's revision changed event.
 If user has unsaved changes, asks user to save before navigating revisions.
 </summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.refrigerantComboBox_SelectedIndexChanged">
	<summary>
 Handles comboboxes' selected index changed events.
 Hides results grid if changes are made that void displayed results.
 </summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.seriesRadioButton_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Handles series radio buttons' check changed events.
 Fills condensers and hides results.
 </summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.modelNumberComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Handles model number combobox selected index changed event.
 Sets control values based on selected model number.
 </summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.fanComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Handles fan combobox selected index changed event.
 </summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.initializeSaveToolStripPanel">
	<summary>
 Initializes save tool strip panel. Sets event handlers and tool strip.
 </summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.fillCoilCombobox">
	<summary>
 Fills coil description combobox w/ basic coils.
 </summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.HideResultsGrid">
	<summary>
 Hides results grid.
 </summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.modelIsSelected">
	<summary>
 Indicates whether a model number has been selected by the user.
 </summary>
</member><member name="M:Rae.RaeSolutions.condenser_rating_screen.formatDatagrid">
	<summary>
 Formats datagrid: sets header, column widths, colors, etc.
 </summary>
</member><member name="P:Rae.RaeSolutions.DoYouWantToDeleteForm.DeleteConfirmed">
	<summary>
 DeleteConfirmed
 </summary>
</member><member name="P:Rae.RaeSolutions.DoYouWantToDeleteForm.DeleteWhat">
	<summary>
 DeleteWhat
 </summary>
</member><member name="P:Rae.RaeSolutions.NewUnknownTypePricingForm.EquipmentType">
	<summary>Equipment type user selected.</summary>
</member><member name="M:Rae.RaeSolutions.NewUnknownTypePricingForm.typeComboBox_Leave">
	<summary>Validates equipment name; alerts user if necessary by flashing icon.</summary>
</member><member name="M:Rae.RaeSolutions.NewUnknownTypePricingForm.initializeValidation">
	<summary>Initializes validation manager, controls, and validators.</summary>
</member><member name="M:Rae.RaeSolutions.NewUnknownTypePricingForm.fillTypesCombobox">
	<summary>Fills equipment type combobox with equipment types.</summary>
</member><member name="T:Rae.RaeSolutions.NewUnknownTypePricingForm">
	<summary>Form to get equipment type from user.</summary>
</member><member name="T:Rae.RaeSolutions.ProcessGridColumns">
	<summary>
 Process grid's column names.
 </summary>
	<history by="Joshua Herron" finish="2007/02/20">
 Created
 </history>
</member><member name="P:Rae.RaeSolutions.NewProjectAndEquipmentForm.ProjectName">
	<summary>
 Project name user entered.
 </summary>
</member><member name="P:Rae.RaeSolutions.NewProjectAndEquipmentForm.EquipmentName">
	<summary>
 Equipment name user entered.
 </summary>
</member><member name="M:Rae.RaeSolutions.NewProjectAndEquipmentForm.NewProjectAndEquipmentForm_Load(System.Object,System.EventArgs)">
	<summary>
 Handles form's load event.
 </summary>
</member><member name="M:Rae.RaeSolutions.NewProjectAndEquipmentForm.okButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles ok button's click event. 
 Validates inputs and hides form (if is valid) or alerts user (if is not valid).
 </summary>
</member><member name="M:Rae.RaeSolutions.NewProjectAndEquipmentForm.cancelButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles cancel button's click event. Cancels and hides form.
 </summary>
</member><member name="M:Rae.RaeSolutions.NewProjectAndEquipmentForm.projectNameTextBox_Leave(System.Object,System.EventArgs)">
	<summary>
 Handles project name textbox's leave event.
 Validates user's project name; alerts user if necessary by flashing icon.
 </summary>
</member><member name="M:Rae.RaeSolutions.NewProjectAndEquipmentForm.equipmentNameTextBox_Leave(System.Object,System.EventArgs)">
	<summary>
 Handles equipment name textbox's leave event.
 Validates equipment name; alerts user if necessary by flashing icon.
 </summary>
</member><member name="M:Rae.RaeSolutions.NewProjectAndEquipmentForm.InitializeValidation">
	<summary>
 Initializes validation manager, controls, and validators.
 </summary>
</member><member name="T:Rae.RaeSolutions.NewProjectAndEquipmentForm">
	<summary>
 Form to get project and equipment name from user.
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionView.CurrentRev">
	<summary>
 The current revision being displayed.
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionView.LastRev">
	<summary>
 The last revision for this process.
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionView.RevList">
	<summary>
 RevList
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionView.ActiveProcessForm">
	<summary>
 ActiveProcessForm
 </summary>
</member><member name="E:Rae.RaeSolutions.RevisionView.RevisionChanged">
	<summary>
 Occurs after/before ...
 </summary>
</member><member name="M:Rae.RaeSolutions.RevisionView.OnRevisionChanged(Rae.ValueChangedEventArgs{System.Single})">
	<summary>
 Raises <see cref="E:Rae.RaeSolutions.RevisionView.RevisionChanged"/> event.
 </summary>
	<param name="e">
 Event arguments to pass in event.
 Use System.EventArgs.Empty if no data is being passed.
 </param>
	<remarks>
 Use this method to raise event rather than raising event directly.
 Protected - Prevents other classes from raising event
 Overridable - Allows derived classes to override implementation.
 </remarks>
</member><member name="P:Rae.RaeSolutions.SelectContactForReportForm.SelectedTo">
	<summary>The contact the report is to.</summary>
</member><member name="P:Rae.RaeSolutions.SelectContactForReportForm.SelectedFrom">
	<summary>The contact the report is from.</summary>
</member><member name="M:Rae.RaeSolutions.SelectContactForReportForm.Load(Rae.RaeSolutions.Business.Entities.ContactList)">
	<summary>Loads project contacts that can be selected.</summary>
	<param name="contacts">Contacts that can be selected</param>
</member><member name="T:Rae.RaeSolutions.SelectContactForReportForm">
	<summary>Lets user select contacts to display in report.</summary>
</member><member name="M:Rae.RaeSolutions.frmboxloadcalc2.projectId">
	<summary>
 Gets project ID as string if project is opened.
 If project is not opened then returns empty string.      
 </summary>
</member><member name="M:Rae.RaeSolutions.frmboxloadcalc2.showUserProducts">
	<summary>
 Retrieves data, shows in grid, calculates sum.
 </summary>
</member><member name="M:Rae.RaeSolutions.condensing_unit_rating_screen.RevisionView_RevisionChanged(Rae.RaeSolutions.RevisionView,Rae.ValueChangedEventArgs{System.Single})">
	<summary>
 Handles revision view control's revision changed event.
 If user has unsaved changes, asks user to save before navigating revisions.
 </summary>
</member><member name="M:Rae.RaeSolutions.condensing_unit_rating_screen.initializeSaveToolStripPanel">
	<summary>
 Initializes save tool strip panel. Sets event handlers and tool strip.
 </summary>
</member><member name="M:Rae.RaeSolutions.report_factory.create(System.String)">
	<summary>Creates a report based on the report file path</summary>
</member><member name="T:Rae.RaeSolutions.report_factory">
	<summary>Report factory used by RAESolutions to create reports</summary>
</member><member name="M:Rae.RaeSolutions.Grid.GetLocationNearSelectedRow(System.Drawing.Size)">
	<summary>
 Gets location to display pop-up below or above selected row without exceeding screen boundaries.
 </summary>
	<param name="popupSize">
 Size of popup to display
 </param>
</member><member name="M:Rae.RaeSolutions.Grid.GetLocationNearRow(System.Windows.Forms.DataGridViewRow,System.Drawing.Size)">
	<summary>
 Gets location to display pop-up below row or above row w/out exceeeding screen boundaries.
 </summary>
	<param name="row">
 Row that return location is related to.
 </param>
	<param name="popupSize">
 Size of pop-up to display.
 </param>
</member><member name="M:Rae.RaeSolutions.Grid.getLocationBelowRow(System.Windows.Forms.DataGridViewRow)">
	<summary>
 Gets location below and to the left of row.
 </summary>
	<param name="row">
 Row the returned location is related to.
 </param>
	<returns>
 Location below and to the left of row.
 </returns>
</member><member name="M:Rae.RaeSolutions.Grid.getLocationAboveRow(System.Windows.Forms.DataGridViewRow)">
	<summary>
 Gets location above and to the left of row.
 </summary>
	<param name="row">
 Row that returned location is related to.
 </param>
	<returns>
 Location above and to the left of row.
 </returns>
</member><member name="M:Rae.RaeSolutions.Grid.isContainedByScreen(System.Drawing.Rectangle)">
	<summary>
 True if rectangle is completely contained by screen; else false.
 </summary>
	<param name="rectangle">
 Rectangle to check if it is completely contained by screen.
 </param>
	<returns>
 True if rectangle is completely contained by screen; else false.
 </returns>
</member><member name="T:Rae.RaeSolutions.Grid">
	<summary>
 Grid control with more functionality than DataGridView
 </summary>
</member><member name="F:Rae.RaeSolutions.Constants.COMPILE_CONFIG">
	<summary>Determines whether the application is being compiled for debug or release.</summary>
</member><member name="F:Rae.RaeSolutions.Constants.TARGET_USER_GROUP">
	<summary>
 Determines the target user group that the application is built for.
 This is set at design time and doesn't change depending on who's logged in.
 </summary>
	<remarks>
 Example: Determines whether downloaded password database will contain employee info.
 </remarks>
</member><member name="F:Rae.RaeSolutions.Constants.EXPIRATION_DATE">
	<summary>Date software expires. Software will not run after expiration date.</summary>
</member><member name="F:Rae.RaeSolutions.Constants.AIR_HANDLER_PRICING_AUTHORIZED">
	<summary>Indicates whether build will allow access to air handler pricing.</summary>
</member><member name="F:Rae.RaeSolutions.Constants.EXPIRATION_FILE_PATH">
	<summary>
 Path to file containing expiration status. Path is undocumented to prevent deletion.
 </summary>
</member><member name="F:Rae.RaeSolutions.Constants.INHOUSE_UPDATER_FILE_NAME">
	<summary>
 Name of file containing list of application files to update. Applies to the updater used inhouse.
 </summary>
</member><member name="F:Rae.RaeSolutions.Constants.INHOUSE_UPDATER_UPDATE_FILES_FILE_NAME">
	<summary>
 Name of file containing list of files to update. Applies to the updater used inhouse.
 </summary>
</member><member name="F:Rae.RaeSolutions.Constants.TESTING">
	<summary>
 Indicates whether program is in test mode.
 </summary>
	<remarks>
 Affects whether the reports have a test watermark.
 </remarks>
</member><member name="F:Rae.RaeSolutions.Constants.FILESERVER1A_INTERNAL_IP">
	<summary>
 IP address for Fileserver1a when accessing server while connected to RAE's network.
 </summary>
</member><member name="F:Rae.RaeSolutions.Constants.FILESERVER1A_EXTERNAL_IP">
	<summary>
 IP address of Fileserver1a when accessing server while disconnected from RAE's network
 </summary>
</member><member name="F:Rae.RaeSolutions.Constants.FILESERVER1_INTERNAL_IP">
	<summary>
 IP Address of Fileserver1 when accessing server while connected to RAE's network.
 </summary>
	<remarks>
 frmLogin - used for ftp access (maps to fileserver1a\fileser1_E\ftp) to download password database
 frmAvailability - to get latest version
 frmMain - checks if update is available
 </remarks>
</member><member name="F:Rae.RaeSolutions.Constants.VERSION_HISTORY_LINK">
	<summary>
 Link to version history document.
 </summary>
</member><member name="T:Rae.RaeSolutions.Constants">
	<summary>Application-wide constants.</summary>
	<remarks>Modifiers. By default, all cwonstants are Shared, Static, and ReadOnly. 
 You cannot use any of these keywords when declaring a constant.
 </remarks>
</member><member name="P:Rae.RaeSolutions.SaveItemChangedForm.SaveType">
	<summary>
 SaveType
 </summary>
</member><member name="P:Rae.RaeSolutions.Diagnostics.UsageLog.FormUsageLogger.ApplicationID">
 -----------------------------------------------------------------------------
 <summary>
 Unique identifier to track application sessions.
 </summary>
	<value>Integer representing a unique identifier for the application session.
 </value>
	<remarks>
	</remarks>
	<history>
 	[CASEYJ]	3/15/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Rae.RaeSolutions.Diagnostics.UsageLog.FormUsageLogger.FormID">
 -----------------------------------------------------------------------------
 <summary>
 Unique identifier to track form sessions.
 </summary>
	<value>Integer representing a unique identifier for a form session.</value>
	<remarks>
	</remarks>
	<history>
 	[CASEYJ]	3/15/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.Diagnostics.UsageLog.FormUsageLogger.#ctor(System.Int32,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Constructor for Form Usage Logger.
 </summary>
	<param name="applicationID">Unique identifier for application session.</param>
	<param name="logFilePath">Path to the log file.</param>
	<remarks>
 Constructor creates FileInfo object for log file using the path for the log
 file and sets the application ID.
 </remarks>
	<history>
 	[CASEYJ]	3/15/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.Diagnostics.UsageLog.FormUsageLogger.LogFormEnd(System.String,System.String,System.Single,System.Single)">
 -----------------------------------------------------------------------------
 <summary>
 Locally logs the rest of the form usage data.
 </summary>
	<param name="model">
 The model selected when the form ends.
 </param>
	<param name="refrigerant">
 The refrigerant selected when the form ends.
 </param>
	<param name="suctionTemperature">
 The suction temperature entered when the form ends.
 </param>
	<param name="ambientTemperature">
 The ambient temperature entered when the form ends.
 </param>
	<remarks>
 Some of the usage data was logged during the LogFormStart method.
 <para>This data can be used to analyze which forms are being used most, and
 what specifications (such as temperature ranges) are commonly used.</para>
	</remarks>
	<history>
 	[CASEYJ]	3/11/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:Rae.RaeSolutions.Diagnostics.UsageLog.FormUsageLogger">
 -----------------------------------------------------------------------------
 Project	 : RAESolutions
 Class	 : RAESolutions.Diagnostics.UsageLog.FormUsageLogger
 
 -----------------------------------------------------------------------------
 <summary>
 Logs form usage statistics.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[CASEYJ]	3/11/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:Rae.RaeSolutions.CondenserResultsDataSet.ResultsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.CondenserResultsDataSet.ResultsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.CondenserResultsDataSet.ResultsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.CondenserResultsDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="P:Rae.RaeSolutions.ContactCompanyControl.SelectedCompany">
	<summary>
 The selected company filters the contacts.
 </summary>
</member><member name="P:Rae.RaeSolutions.ContactCompanyControl.SelectedContact">
	<summary>
 The selected contact.
 </summary>
</member><member name="P:Rae.RaeSolutions.ContactCompanyControl.Category">
	<summary>
 Category of the companies to view (ex. representative, contractor, engineer, etc.).
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.Load(System.String)">
	<summary>
 Loads companies based on category.
 </summary>
	<param name="category">
 Category to filter companies by (ex. representative, contractor, etc.)
 </param>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.Load">
	<summary>
 Loads all companies.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.SelectContactBy(Rae.RaeSolutions.Business.Entities.Name)">
	<summary>
 Selects contact by name.
 </summary>
	<param name="name">
 Name of contact to select
 </param>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.StartUserAddCompany">
	<summary>
 Starts process that allows user to add a new company.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.StartUserAddContact">
	<summary>
 Starts process that allows user to add a new contact.
 </summary>
	<remarks></remarks>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.StartUserEditCompany">
	<summary>
 Starts process that allows user to edit the selected company.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.StartUserEditContact">
	<summary>
 Starts process to let user edit the selected contact.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.control_Click(System.Object,System.EventArgs)">
	<remarks>
 Useful if you want to tell when the label's parent control is selected.
 </remarks>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.retrieveCompanies(System.String)">
	<summary>
 Retrieves companies with contacts of the specified category (ex. Representative, Contractor, etc.)
 </summary>
	<param name="category">
 Category of the company (ex. Representative, Contractor, Engineer, Customer, Architect)
 </param>
</member><member name="M:Rae.RaeSolutions.ContactCompanyControl.retrieveContacts(System.Int32)">
	<summary>
 Retrieves contacts in the company with the specified ID.
 </summary>
	<param name="companyId">
 The ID of the company of the contacts being retrieved.
 </param>
</member><member name="T:Rae.RaeSolutions.ContactCompanyControl">
	<summary>
 Control to view contacts in a specified company.
 The companies can be filtered by category (representative, contractor, engineer, etc.)
 The contact list shows the contacts in the selected company.
 </summary>
</member><member name="P:Rae.RaeSolutions.ContactManagerControl.ProjectId">
	<summary>
 ID of project that this contact is in
 </summary>
</member><member name="P:Rae.RaeSolutions.ContactManagerControl.SelectedContact">
	<summary>Returns the selected contact</summary>
</member><member name="P:Rae.RaeSolutions.ContactManagerControl.SelectedContactControl">
	<summary>Selected contact control</summary>
</member><member name="P:Rae.RaeSolutions.ContactManagerControl.Contacts">
	<summary>
 Contacts added to contact manager.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactManagerControl.AddContact">
	<summary>
 Add default contact to contact manager.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactManagerControl.AddContact(Rae.RaeSolutions.Business.Entities.Contact)">
	<summary>
 Add contact for selection.
 </summary>
	<param name="contact">
 Contact to add
 </param>
</member><member name="M:Rae.RaeSolutions.ContactManagerControl.AddContacts(Rae.RaeSolutions.Business.Entities.ContactList)">
	<summary>
 Adds contact list.
 </summary>
	<param name="contacts">
 List of contacts to add
 </param>
</member><member name="M:Rae.RaeSolutions.ContactManagerControl.RemoveContact">
	<summary>
 Remove selected contact.
 </summary>
	<remarks>
 Doesn't error if a contact is not selected.
 </remarks>
</member><member name="P:Rae.RaeSolutions.ContactManagerControl.CanEdit">
	<summary>True if control can be editted.</summary>
</member><member name="T:Rae.RaeSolutions.ContactManagerControl">
	<summary>Contact manager</summary>
</member><member name="P:Rae.RaeSolutions.ItemCreator.GetProcessType">
	<summary>
 GetProcessType
 </summary>
</member><member name="M:Rae.RaeSolutions.ItemCreator.CreateEquipment(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>
 Creates equipment, adds to project manager and saves.
 </summary>
</member><member name="M:Rae.RaeSolutions.ItemCreator.CreateEquipment">
	<summary>
 Creates equipment, adds to project manager and saves.
 </summary>
</member><member name="M:Rae.RaeSolutions.ItemCreator.CreateProcess(Rae.RaeSolutions.Business.ProcessType,Rae.RaeSolutions.Business.Entities.ProcessItem)">
	<summary>
 Creates process, adds to project manager and saves.
 </summary>
</member><member name="M:Rae.RaeSolutions.ItemCreator.CreateExistingProject(System.String)">
	<summary>
 Prompts user to select existing project and sets open project.
 </summary>
</member><member name="M:Rae.RaeSolutions.ItemCreator.CreateBoxLoad(Rae.RaeSolutions.Business.Entities.BoxLoad)">
	<summary>Creates an existing box load</summary>
</member><member name="M:Rae.RaeSolutions.ItemCreator.setProjectManager(System.String)">
	<summary>Sets project manager based on project ID.</summary>
	<param name="projectId">ID of project to create a new project manager for.</param>
</member><member name="P:Rae.RaeSolutions.frmboxloadcalc2.BoxLoad">
	<summary>
 Box load that represents controls in form
 </summary>
</member><member name="M:Rae.RaeSolutions.BoxLoadLinksForm.AskUserToSelect(System.String)">
	<summary>
 Asks user to select a box load from the project
 </summary>
	<param name="fromProject">
 ID of project containing box loads
 </param>
</member><member name="M:Rae.RaeSolutions.OptionQuantityForm.#ctor(System.String,System.String)">
	<summary>
 Initializes option quantity
 </summary>
	<param name="code">Option code</param>
	<param name="description">Option description</param>
</member><member name="P:Rae.RaeSolutions.OptionQuantityForm.Quantity">
	<summary>
 Option quantity entered by user
 </summary>
</member><member name="P:Rae.RaeSolutions.SpecialOptionCreatorControl.SpecialOption">
	<summary>
 Special option that user entered.
 </summary>
</member><member name="P:Rae.RaeSolutions.SpecialOptionCreatorControl.Id">
	<summary>
 Id
 </summary>
</member><member name="P:Rae.RaeSolutions.SpecialOptionCreatorControl.AuthorizedFor">
	<summary>
 AuthorizedFor
 </summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionCreatorControl.Create(Rae.RaeSolutions.Business.Entities.item_id,System.String)">
	<summary>
 Initializes control to create special option.
 </summary>
	<param name="id">
 Equipment ID.</param>
	<param name="authorizedFor">
 Person who special option is authorized for</param>
</member><member name="M:Rae.RaeSolutions.SpecialOptionCreatorControl.Create(Rae.RaeSolutions.Business.Entities.item_id,Rae.RaeSolutions.Business.Entities.SpecialOption)">
	<summary>
 Initializes control to edit special option.
 </summary>
	<param name="id">
 Equipment ID</param>
	<param name="specialOption">
 Special option to edit</param>
</member><member name="P:Rae.RaeSolutions.SpecialOptionCreatorForm.SpecialOption">
	<summary>
 Special option
 </summary>
</member><member name="P:Rae.RaeSolutions.SpecialOptionCreatorForm.ExistingSpecialOptions">
	<summary>
 Special options that have already been added.
 </summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionCreatorForm.ShowDialog(Rae.RaeSolutions.Business.Entities.item_id,System.String,Rae.RaeSolutions.Business.Entities.SpecialOptionList)">
	<summary>
 Shows form as modal form.
 </summary>
	<param name="id">
 Equipment ID.</param>
	<param name="authorizedFor">
 Person special option is authorized for</param>
	<returns>
 Dialog result (OK or Cancel)</returns>
</member><member name="M:Rae.RaeSolutions.SpecialOptionCreatorForm.IsOptionCodeAlreadyAdded(System.String)">
	<summary>
 Returns true if special option code has already been added; else returns false.
 </summary>
	<param name="codeToAdd">
 Special option code to add.
 </param>
</member><member name="M:Rae.RaeSolutions.SpecialOptionCreatorForm.btnOk_Click(System.Object,System.EventArgs)">
	<summary>
 OK button click event handler.
 </summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionCreatorForm.btnCancel_Click(System.Object,System.EventArgs)">
	<summary>
 Cancel button click event handler.
 </summary>
</member><member name="M:Rae.RaeSolutions.OptionGrid.GetDataRow(System.Int32)">
	<summary>Gets the data row index based on the display row index.</summary>
</member><member name="P:Rae.RaeSolutions.OptionGrid.table">
	<summary>Returns data source as DataTable since this grid only works with the options data table.</summary>
</member><member name="T:Rae.RaeSolutions.OptionGrid">
	<summary>Specialized grid for showing equipment options.</summary>
	<remarks>
 Grid handles display row and data row access more conveniently when grid is grouped.
 Idioms:
 display index - refers to the row index that allows you to access presentation/UI properties (ex. CellStyle)
 data index - refers to the row index that allows you to access data properties (ex. CellValue)

 The C1 grid has a quirk in how it forces you to access the display properties diffently than the data properties.
 The data index and display index are different when the grid is grouped.
 The display index (e.Row) counts group headers and only visible data rows; 
 it is the Row in FetchCellStyleEventArgs and FetchCellTipsEventArgs.
 The data index only counts data rows (both hidden and shown); it does not count group headers.
 To determine the index for data this equation can be used.
 dataIndex = displayIndex - groupHeadersAbove + hiddenRowsAbove
 </remarks>
</member><member name="T:Rae.RaeSolutions.CopyExistingItemWorkFlow">
	<summary>
 Work flow for copying an existing item from one project to another.
 </summary>
	<remarks>
 Depenedent on ProjectInfo
 </remarks>
</member><member name="E:Rae.RaeSolutions.IPumpSelectionView.Changed">
	<summary>Occurs after pump selection criteria has changed</summary>
</member><member name="E:Rae.RaeSolutions.IPumpSelectionView.FlowChanged">
	<summary>Occurs after flow has changed</summary>
</member><member name="E:Rae.RaeSolutions.PumpSelectionView.Changed">
	<summary>Occurs after pump selection criteria has changed</summary>
</member><member name="E:Rae.RaeSolutions.PumpSelectionView.FlowChanged">
	<summary>Occurs after flow has changed</summary>
</member><member name="T:Rae.RaeSolutions.form_unit_info.sectionAbbreviation">
	<summary>Abbreviations for the sections in the air handler
 </summary>
	<remarks>Enumerated text must match column names in section dimensions database table.
 The enumerated text is used to retrieve column values.
 </remarks>
</member><member name="M:Rae.RaeSolutions.form_unit_info.radBaseMaterialSheetMetal_CheckedChanged(System.Object,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
 Synchronizes base material check value with data bound label.
 </summary>
	<history>
 	[CASEYJ]	5/4/2005	Created
   <para>Replaced checkboxes with radioboxes, since only one option can be checked
   at a time.</para>
	</history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.form_unit_info.radBaseMaterialSteel_CheckedChanged(System.Object,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
 Synchronizes base material check value with data bound label.
 </summary>
	<history>
 	[CASEYJ]	5/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.form_unit_info.lblBaseMaterialChkValue_TextChanged(System.Object,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
 Synchronizes base material radio box control values with dataset.
 </summary>
	<history>
 	[CASEYJ]	5/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.form_unit_info.getCoilCost(Rae.RaeSolutions.Business.Entities.CoilPricingWrapper.CoilType,System.Int32,Rae.RaeSolutions.Business.Entities.CoilPricingWrapper.FinMaterial,System.Int32,System.Boolean,System.Double,System.Double,System.Int32,System.Double,System.Double)">
	<summary>
 Get coil cost; has all the parameters necessary to calculate coil cost.
 </summary>
</member><member name="M:Rae.RaeSolutions.form_unit_info.getCoilCost(Rae.RaeSolutions.Business.Entities.CoilPricingWrapper.CoilType,System.Int32,Rae.RaeSolutions.Business.Entities.CoilPricingWrapper.FinMaterial,System.Int32,System.Boolean,System.Double,System.Double)">
	<summary>
 Gets coil cost; retrieves coil data from data source.
 </summary>
</member><member name="M:Rae.RaeSolutions.form_unit_info.getCoilCost(System.Int32)">
	<summary>
 Gets coil cost; get coil inputs from control values and data source.
 </summary>
	<param name="index">
 Index of the control array to get coil pricing for.
 </param>
</member><member name="M:Rae.RaeSolutions.form_unit_info.SetHousedFanPriceAndWeight(System.Int16)">
	<summary>
 Sets labels displaying cost and weight of fan
 </summary>
	<param name="Index">
	</param>
	<remarks>
 Requires fan type, fan size, and hp
 </remarks>
</member><member name="M:Rae.RaeSolutions.form_unit_info.calculatePlenumFanCost(System.String,System.Double)">
	<summary>
 Calculates plenum fan cost and includes labor.
 </summary>
</member><member name="M:Rae.RaeSolutions.form_unit_info.calculateHousedFanCost">
	<summary>
 Calculates housed fan cost; updates minimum number of stages control.
 </summary>
</member><member name="M:Rae.RaeSolutions.form_unit_info.checkIfBoardIsRequired(System.Double,System.String)">
	<summary>
 Determines if MCB-1 board is required. Returns true if required; else false.
 </summary>
	<param name="power">
 Power in MBH
 </param>
	<param name="type">
 Heater type
 </param>
</member><member name="M:Rae.RaeSolutions.form_unit_info.calculateGasHeaterCost(System.String,System.Double,System.Boolean)">
	<summary>
 Calculates cost of natural gas heater section.
 </summary>
</member><member name="M:Rae.RaeSolutions.form_unit_info.updateCostGasHeaterCost(System.String,System.Double,System.Boolean)">
	<summary>
 Updates cost property.
 </summary>
</member><member name="M:Rae.RaeSolutions.form_unit_info.getMaxPower(System.String)">
	<summary>
 Gets the max power of the heater based on the air handler model.
 </summary>
	<param name="airHandlerModel">
 Air handler model this section is in.
 </param>
</member><member name="M:Rae.RaeSolutions.form_unit_info.ParseModelNum(System.String)">
	<summary>
 Parses and returns just the number portion of the model number (ex. TPAH-22 &gt; 22).
 </summary>
	<param name="model">
 Air handler model should be in the format TPAH-##.
 </param>
</member><member name="P:Rae.RaeSolutions.Updating.ContactDataStructure.Analyzer.ContactDataStructure">
	<summary>
 Indicates what type of contact structure is being used
 </summary>
</member><member name="P:Rae.RaeSolutions.Updating.ContactDataStructure.Analyzer.ProjectId">
	<summary>
 ID of the project whose contact data structure is being analyzed.
 </summary>
</member><member name="M:Rae.RaeSolutions.Updating.ContactDataStructure.Analyzer.#ctor(Rae.RaeSolutions.Business.Entities.item_id)">
	<summary>
 Initializes a new instance of the contact data structure analyzer.
 </summary>
	<param name="projectId">
 ID of the project whose contact data structure is being analyzed.
 </param>
</member><member name="T:Rae.RaeSolutions.Updating.ContactDataStructure.Analyzer">
	<summary>
 Analyzes the current contact data structure.
 Useful in determining whether the data structure should be updated to a newer existing structure.
 </summary>
	<remarks>
		<para>
 If the project only contains a representative contact, it is automatically converted and 
 the project is marked as updated (SingleMapping).
 </para>
 Example:
 <code>
 Dim analyzer As New Analyzer(projectId)
 If analyzer.ContactStructure = ... Then ...
 </code>
	</remarks>
</member><member name="M:Rae.RaeSolutions.ContactSelectionControlFactory.CreateEditor">
	<summary>
 Creates contact selection control with a default contact displayed.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactSelectionControlFactory.CreateEditor(Rae.RaeSolutions.Business.Entities.Contact)">
	<summary>
 Creates contact selection control with the specified contact displayed.
 </summary>
	<param name="contact">
 Contact to display
 </param>
</member><member name="M:Rae.RaeSolutions.ContactSelectionControlFactory.CreateDisplayOnly(Rae.RaeSolutions.Business.Entities.Contact)">
	<summary>
 Creates contact selection control with the specified contact selected. The selected contact cannot be changed or editted.
 </summary>
	<param name="contact">
 Contact to display.
 </param>
</member><member name="T:Rae.RaeSolutions.ContactSelectionControlFactory">
	<summary>
 Creates contact selection controls.
 </summary>
</member><member name="E:Rae.RaeSolutions.SpecialOptionsControl.TotalPriceChanged">
	<summary>
 Occurs after/before ...
 </summary>
</member><member name="E:Rae.RaeSolutions.SpecialOptionsControl.DataSourceChanged">
	<summary>
 Occurs after/before ...
 </summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionsControl.OnDataSourceChanged(System.EventArgs)">
	<summary>
 Raises <see cref="E:Rae.RaeSolutions.SpecialOptionsControl.DataSourceChanged"/> event.
 </summary>
	<param name="e">
 Event arguments to pass in event.
 Use System.EventArgs.Empty if no data is being passed.
 </param>
	<remarks>
 Use this method to raise event rather than raising event directly.
 Protected - Prevents other classes from raising event
 Overridable - Allows derived classes to override implementation.
 </remarks>
</member><member name="P:Rae.RaeSolutions.SpecialOptionsControl.Id">
	<summary>
 Equipment ID.
 </summary>
</member><member name="P:Rae.RaeSolutions.SpecialOptionsControl.AuthorizedFor">
	<summary>
 Person special option is authorized for
 </summary>
</member><member name="P:Rae.RaeSolutions.SpecialOptionsControl.TotalPrice">
	<summary>
 TotalPrice
 Total price of options for a single equipment.</summary>
</member><member name="P:Rae.RaeSolutions.SpecialOptionsControl.SpecialOptions">
	<summary>
 Special options list grid is bound to.
 </summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionsControl.Initialize(Rae.RaeSolutions.Business.Entities.item_id,System.String)">
	<summary>
 Initializes special options control.
 </summary>
	<param name="id">
 Equipment ID.</param>
	<param name="authorizedFor">
 Person special option is authorized for</param>
</member><member name="M:Rae.RaeSolutions.SpecialOptionsControl.AddSpecialOption">
	<summary>
 Opens creation form for user to add special option and adds option to grid.
 </summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionsControl.DeleteSelectedSpecialOption">
	<summary>
 Deletes selected special option in grid.
 </summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionsControl.CalculateTotalPrice">
	<summary>
 Calculates total price. Sets <see cref="P:Rae.RaeSolutions.SpecialOptionsControl.TotalPrice"/> property.
 </summary>
</member><member name="M:Rae.RaeSolutions.SpecialOptionsControl.RefreshTotalPrice">
	<summary>
 Calculates total price, refreshes and formats label, and raises price changed event.
 </summary>
</member><member name="T:Rae.RaeSolutions.SpecialOptionsControl">
	<summary>
 Control to add and delete special options.
 </summary>
	<remarks>
 Call Initialize before adding options.
 </remarks>
</member><member name="M:Rae.RaeSolutions.frmAvailability.frmAvailability_Load(System.Object,System.EventArgs)">
	<summary>
 Handles form load event.
 Checks for update availability.
 </summary>
</member><member name="M:Rae.RaeSolutions.frmAvailability.GetUpdateCheckFailedMessage(System.String,System.Net.NetworkInformation.IPStatus)">
	<summary>
 Gets message to notify user update check failed.
 </summary>
	<param name="ftpAddress">
 FTP address to get updates from.
 </param>
	<param name="replyStatus">
 Ping reply status from FTP address.
 </param>
</member><member name="P:Rae.RaeSolutions.SelectedOptionGrid.IsPriceVisible">
	<summary>
 Shows option prices if true
 </summary>
</member><member name="M:Rae.RaeSolutions.SelectedOptionGrid.SetColumnWidths">
	<summary>Sets column widths</summary>
</member><member name="M:Rae.RaeSolutions.SelectedOptionGrid.Add(System.Data.DataRow)">
	<summary>Adds row to selected options grid</summary>
	<param name="op">Row containing option to add</param>
	<returns>Boolean that is true if option was added to selected options grid</returns>
</member><member name="M:Rae.RaeSolutions.SelectedOptionGrid.Remove(System.Data.DataRow)">
	<summary>Removes option from selected options list</summary>
</member><member name="T:Rae.RaeSolutions.SelectedOptionGrid">
	<summary>
 Specialized grid for options that the user selected
 </summary>
</member><member name="M:Rae.RaeSolutions.chiller_pricing_screen.load_chiller_data(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Sets control values that are static for a specific chiller model.</summary>
</member><member name="E:Rae.RaeSolutions.ContactConverterControl.Completed">
	<summary>
 Occurs after all contacts have been converted.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactConverterControl.OnCompleted(System.EventArgs)">
	<summary>
 Raises Completed event.
 </summary>
	<param name="e">
 Event arguments to pass in event.
 </param>
</member><member name="P:Rae.RaeSolutions.ContactConverterControl.Contacts">
	<summary>
 List of converted contacts to add to project.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactConverterControl.Initialize(Rae.RaeSolutions.Business.Entities.ContactList)">
	<summary>
 Initializes contact converter control with contacts that need to be converted.
 </summary>
	<param name="contacts">
 Contacts that need to be converted.
 </param>
</member><member name="T:Rae.RaeSolutions.ContactConverterControl">
	<summary>
 Control to display contact name, company and role and let user create or select the contact.
 </summary>
</member><member name="M:Rae.RaeSolutions.CommonSpecsControl.PassSubmittalParams(rae.reporting.CrystalReports.base_report_viewer)">
	<summary>Passes parameters to submittal accessories report.</summary>
</member><member name="M:Rae.RaeSolutions.CommonSpecsControl.PassOrderWriteUpParams(rae.reporting.CrystalReports.base_report_viewer)">
	<summary>Passes parameters to order write up report.</summary>
</member><member name="M:Rae.RaeSolutions.CommonSpecsControl.SetControlValues(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Sets control values.</summary>
</member><member name="M:Rae.RaeSolutions.CommonSpecsControl.GetControlValues(Rae.RaeSolutions.Business.Entities.EquipmentItem@)">
	<summary>Gets control values and sets equipment properties with them.</summary>
</member><member name="T:Rae.RaeSolutions.CommonSpecsControl">
	<summary>Control containing controls for common specifications.</summary>
	<remarks>Can be inherited from to create equipment spec controls.</remarks>
</member><member name="T:Rae.RaeSolutions.SelectedOptionsDataSet.SelectedOptionsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.SelectedOptionsDataSet.StandardOptionsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.SelectedOptionsDataSet.SelectedOptionsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.SelectedOptionsDataSet.StandardOptionsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.SelectedOptionsDataSet.SelectedOptionsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.SelectedOptionsDataSet.StandardOptionsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.SelectedOptionsDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:Rae.RaeSolutions.ChillerGrab">
	<summary>Facade for grabbing bags (values needed to perform a task)</summary>
</member><member name="P:Rae.RaeSolutions.CoolStuff.CoolStuffCommon.CoolStuffForm">
	<summary>
	</summary>
</member><member name="P:Rae.RaeSolutions.CoolStuff.CoolStuffCommon.CallingForm">
	<summary>
 CallingForm
 </summary>
</member><member name="P:Rae.RaeSolutions.CoolStuff.CoolStuffCommon.CoolStuffBlName">
	<summary>
 CallingForm
 </summary>
</member><member name="P:Rae.RaeSolutions.CoolStuff.CoolStuffCommon.OpenProjectID">
	<summary>
 CallingForm
 </summary>
</member><member name="M:Rae.RaeSolutions.CoolStuff.CoolStuffCommon.CreateNewRecord">
	<summary>
 Inserts new incomplete record
 </summary>
</member><member name="M:Rae.RaeSolutions.CoolStuff.CoolStuffCommon.PreInvoke(System.Object,System.Windows.Forms.Form,System.Int32,System.String,System.String@,System.Single@,System.String@,System.String@,System.String@,System.String@,System.Boolean@,System.Int32@,System.Boolean)">
	<summary>
 Initializes control values, shows form, then gets updated values after form closes.
 </summary>
</member><member name="M:Rae.RaeSolutions.CoolStuff.CoolStuffCommon.GetDuplicateSql(System.String,System.Int32,System.String)">
	<summary>
 Builds SQL statement to duplicates box load
 </summary>
	<param name="projectId">Project ID</param>
	<param name="revision">Item Revision</param>
	<param name="itemId">Item database ID</param>
</member><member name="M:Rae.RaeSolutions.CoolStuff.CoolStuffCommon.GetOverridesFromDb">
	<summary>
 Populates properties with values from database
 </summary>
</member><member name="M:Rae.RaeSolutions.CoolStuff.CoolStuffCommon.NewCoolStuffEntry(System.Object)">
	<summary>
 Used in RevisionSave class
 </summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.Main">
	<summary>Reference to main form.</summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.User">
	<summary>Logged in user's profile</summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.IsLoggedIn">
	<summary>True if a user has logged in to the application.</summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.AppDataPath">
	<summary>Application data path without the version folder</summary>
	<value>Application data path without the version folder</value>
	<remarks>Does not include the version folder and ends with a forward slash</remarks>
</member><member name="P:Rae.RaeSolutions.AppInfo.AppFolderPath">
	<summary>Application's folder. Ends with a back slash (\).</summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.DbFolderPath">
	<summary>Database folder in application folder. Contains majority of local databases.</summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.ServerDbFolderPath">
	<summary>Path to the database folder on the server.</summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.FileserverFTPAddress">
	<summary>FTP address on Fileserver1a.</summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.Product">
	<summary>Product name specified in assembly info</summary>
	<value>Product name</value>
	<remarks>This value is cached; only a single instance of AssemblyInfo is constructed.</remarks>
</member><member name="P:Rae.RaeSolutions.AppInfo.network_is_available">
	<summary>Determines if RAE's network is available.</summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.NetworkConnectivity">
	<summary>Indicates whether RAE's network is available.</summary>
</member><member name="P:Rae.RaeSolutions.AppInfo.Division">
	<summary>Division (company) of RAE Corporation.</summary>
</member><member name="M:Rae.RaeSolutions.AppInfo.Initialize">
	<summary>Initializes application info. Should Initialize() before using.</summary>
</member><member name="M:Rae.RaeSolutions.AppInfo.#ctor">
	<summary>Prevents the class from being constructed. All members are shared.</summary>
</member><member name="M:Rae.RaeSolutions.AppInfo.getAppDataPath">
	<summary>Gets path to the the user's application data folder, 
 C:\Documents and Settings\Username\Application Data\Company\Application\Version.
 </summary>
	<returns>Path to user's application data folder</returns>
	<remarks>
		<para>Application data path as returned by Application.UserAppDataPath:
  C:\Documents and Settings\Username\Application Data\[Company]\[Application]\[Version]
 </para>
		<para>Application data path as returned by this function:
  C:\Documents and Settings\[Username]\Application Data\[Company]\[Application]\
 </para>
		<para>Notice the version folder is not included and the path ends with a slash
 </para>
	</remarks>
</member><member name="T:Rae.RaeSolutions.AppInfo">
	<summary>Contains information about application (e.g. user, connectivity, file paths).</summary>
</member><member name="T:Rae.RaeSolutions.CoolStuffboxload2DataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="F:Rae.RaeSolutions.Updating.ContactDataStructure.ContactDataStructureDescription.NamesOnly">
	<summary>
 Contact info only contains company and contact name (not addresses, phone numbers, etc.).
 </summary>
	<remarks>
 This was the contact info for architect, engineer and contractor originally
 </remarks>
</member><member name="F:Rae.RaeSolutions.Updating.ContactDataStructure.ContactDataStructureDescription.SingleMapping">
	<summary>
 Contact info contains a single address and contact number per contact (can't have multiple addresses)
 </summary>
	<remarks>
 This is the second contact data structure.
 </remarks>
</member><member name="T:Rae.RaeSolutions.Updating.ContactDataStructure.ContactDataStructureDescription">
	<summary>
 Describes contact structure
 </summary>
</member><member name="P:Rae.RaeSolutions.NewPricingForm.EquipmentName">
	<summary>
 Equipment name user entered.
 </summary>
</member><member name="M:Rae.RaeSolutions.NewPricingForm.NewPricingForm_Load(System.Object,System.EventArgs)">
	<summary>
 Handles form's load event.
 </summary>
</member><member name="M:Rae.RaeSolutions.NewPricingForm.okButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles ok button's click event. 
 Validates inputs and hides form (if is valid) or alerts user (if is not valid).
 </summary>
</member><member name="M:Rae.RaeSolutions.NewPricingForm.cancelButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles cancel button's click event. Cancels and hides form.
 </summary>
</member><member name="M:Rae.RaeSolutions.NewPricingForm.equipmentNameTextBox_Leave(System.Object,System.EventArgs)">
	<summary>
 Handles equipment name textbox's leave event.
 Validates equipment name; alerts user if necessary by flashing icon.
 </summary>
</member><member name="M:Rae.RaeSolutions.NewPricingForm.InitializeValidation">
	<summary>
 Initializes validation manager, controls, and validators.
 </summary>
</member><member name="T:Rae.RaeSolutions.NewPricingForm">
	<summary>
 Form to get project and equipment name from user.
 </summary>
</member><member name="P:Rae.RaeSolutions.DataGridViewValidationCell.Value">
	<summary>
 Indicates validation status.
 </summary>
</member><member name="M:Rae.RaeSolutions.DataGridViewValidationCell.#ctor">
	<summary>
 Constructs cell to indicate validation status.
 </summary>
</member><member name="T:Rae.RaeSolutions.DataGridViewValidationCell">
	<summary>
 Validation cell displays image to indicate validation status, Value property.
 </summary>
	<history by="Casey Joyce" finish="2006/07/17">
 Created
 </history>
</member><member name="P:Rae.RaeSolutions.PhoneControl.PhoneNum">
	<summary>Phone number entered in control.</summary>
</member><member name="P:Rae.RaeSolutions.PhoneControl.ExtensionVisible">
	<summary>
 Gets and sets visibility of phone number extension controls (label, textbox, and example value).
 </summary>
</member><member name="M:Rae.RaeSolutions.PhoneControl.GrabPhoneNum">
	<summary>Populates PhoneNum property with values in controls</summary>
</member><member name="M:Rae.RaeSolutions.PhoneControl.SetPhoneNum(Rae.RaeSolutions.Business.Entities.ContactNum)">
	<summary>Sets phone number object properties and sets control values.</summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.Process_Saved(Rae.RaeSolutions.Business.Entities.ProcessItem,System.EventArgs)">
	<summary>
 Handles process saved event. Updates values in the row corresponding to the saved process.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.Process_ItemAdded(Rae.Collections.EventfulList{Rae.RaeSolutions.Business.Entities.ProcessItem},Rae.Collections.ListItemAddedEventArgs)">
	<summary>
 Event handler for process added event.
 Adds process to grid.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.Process_Removed(Rae.RaeSolutions.Business.Entities.ProcessItem,System.EventArgs)">
	<summary>
 Event handler for process deleted event.
 removes process from grid.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.ProcessListView_Load(System.Object,System.EventArgs)">
	<summary>
 Event handler for process list view load event.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.mnuItemOptions_Opened(System.Object,System.EventArgs)">
	<summary>
 Event handler for context menu opened event.
 Displays selected process name so that the user will no which process the options apply to.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.mnuItemOptions_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Handles context menu opening event.
 Cancels opening context menu if process is not selected.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.mnuRename_Click(System.Object,System.EventArgs)">
	<summary>
 Handles rename menu item clicked event.
 Allows user to rename selected process.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.mnuOpen_Click(System.Object,System.EventArgs)">
	<summary>
 Handles context menu open clicked event. Opens equipment.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.mnuNew_Click(System.Object,System.EventArgs)">
	<summary>
 Handles context menu new clicked event. Begins process for user to create process.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.Process_ItemNameChanged(Rae.RaeSolutions.Business.Entities.ProcessItem,System.EventArgs)">
	<summary>
 Event handler for process item name changed event.
 Renames name in grid's corresponding cell.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.GetRowIndex(System.String)">
	<summary>
 Gets index of row containing the ID. Returns -1 if row does not exist.
 </summary>
	<param name="id">
 ID to look for.
 </param>
</member><member name="M:Rae.RaeSolutions.ProcessListView.PopupRename">
	<summary>
 Pops up form to rename selected equipment, and renames equipment.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProcessListView.GetLocationNearRow(System.Windows.Forms.DataGridViewRow,System.Drawing.Size)">
	<summary>
 Gets location to display pop-up below row or above row w/out exceeeding screen boundaries.
 </summary>
	<param name="row">
 Row that return location is related to.
 </param>
	<param name="popupSize">
 Size of pop-up to display.
 </param>
</member><member name="M:Rae.RaeSolutions.ProcessListView.GetLocationBelowRow(System.Windows.Forms.DataGridViewRow)">
	<summary>
 Gets location below and to the left of row.
 </summary>
	<param name="row">
 Row the returned location is related to.
 </param>
	<returns>
 Location below and to the left of row.
 </returns>
</member><member name="M:Rae.RaeSolutions.ProcessListView.GetLocationAboveRow(System.Windows.Forms.DataGridViewRow)">
	<summary>
 Gets location above and to the left of row.
 </summary>
	<param name="row">
 Row that returned location is related to.
 </param>
	<returns>
 Location above and to the left of row.
 </returns>
</member><member name="M:Rae.RaeSolutions.ProcessListView.IsContainedByScreen(System.Drawing.Rectangle)">
	<summary>
 True if rectangle is completely contained by screen; else false.
 </summary>
	<param name="rectangle">
 Rectangle to check if it is completely contained by screen.
 </param>
	<returns>
 True if rectangle is completely contained by screen; else false.
 </returns>
</member><member name="P:Rae.RaeSolutions.ProcessListView.SelectedProcess">
	<summary>
 Selected process item in grid - null if no process is selected
 </summary>
</member><member name="P:Rae.RaeSolutions.ProjectInfo.Viewer">
	<summary>
 Viewer can view/open project items.
 </summary>
</member><member name="P:Rae.RaeSolutions.ProjectInfo.Creator">
	<summary>
 Creator can create new project items.
 </summary>
</member><member name="M:Rae.RaeSolutions.ProjectInfo.Initialize(System.Windows.Forms.Form)">
	<summary>
 Initializes objects. Must be called before using shared members.
 </summary>
	<param name="mdiParent">
 Mdi parent form to view items in.
 </param>
</member><member name="M:Rae.RaeSolutions.ProjectInfo.NewItemID(System.String,System.Boolean)">
	<summary>
 creates new item id based on existing item id - increments time one second without pause
 </summary>
	<param name="FromItemID"></param>
	<returns>new ItemID incremented one second from the original FromItemID parameter</returns>
	<remarks></remarks>
</member><member name="M:Rae.RaeSolutions.ProjectInfo.RevisionServerTable(System.String,System.Data.DataTable)">
	<summary>
 Used when checking in project... this will check in the offline copy
 by inserting all revisions made to the offline version into the project
 level at which it was orginally checked out
 </summary>
	<param name="projectid"></param>
	<param name="tbl"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Rae.RaeSolutions.ProjectInfo.UpdateServerTable(System.String,System.Data.DataTable)">
	<summary>
 Used when checking in project... this will check in the offline copy
 by inserting all revisions made to the offline version into the project
 level at which it was orginally checked out
 </summary>
	<param name="projectid"></param>
	<param name="tbl"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Rae.RaeSolutions.ProjectInfo">
	<summary>
 Project info. Must call Initialize(mdiParent) method before using shared members.
 </summary>
</member><member name="T:Rae.RaeSolutions.evaporative_condenser_chiller_iplv_data.iplv_dataDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.evaporative_condenser_chiller_iplv_data.iplv_dataRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.evaporative_condenser_chiller_iplv_data.iplv_dataRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.evaporative_condenser_chiller_iplv_data">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:Rae.RaeSolutions.compiled_configuration">
	<summary>Indicates whether application is being compiled to debug or release.</summary>
	<remarks>Relative paths vary based on this setting.</remarks>
</member><member name="M:Rae.RaeSolutions.AboutForm.LogFormStart">
	<summary>Logs start of form.
 </summary>
	<history>[CASEYJ]	3/17/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.AboutForm.LogFormEnd">
	<summary>Logs usage statistics available while form is closing.
 </summary>
	<history>[CASEYJ]	3/17/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.AboutForm.DisplayAppInfo">
	<summary>
 Displays application information in controls.
 </summary>
	<remarks>
 Uses assembly info to set controls.
 </remarks>
</member><member name="M:Rae.RaeSolutions.AboutForm.frmAbout_Load(System.Object,System.EventArgs)">
	<summary>
 Form load event handler
 </summary>
</member><member name="M:Rae.RaeSolutions.AboutForm.frmAbout_Closing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
 Form closing event handler
 </summary>
</member><member name="M:Rae.RaeSolutions.AboutForm.lllVersionHistory_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
	<summary>
 Version history link clicked event handler
 </summary>
</member><member name="T:Rae.RaeSolutions.AboutForm">
	<summary>
 Displays information about application.
 </summary>
	<remarks>
 Using ShowDialog to display this form will cause the OK button to close the form.
 </remarks>
</member><member name="M:Rae.RaeSolutions.form_project_info.LogFormEnd">
 -----------------------------------------------------------------------------
 <summary>
 Logs usage statistics available while form is closing.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[CASEYJ]	3/17/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.form_project_info.LogFormStart">
 -----------------------------------------------------------------------------
 <summary>
 Logs start of form.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[CASEYJ]	3/17/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.form_project_info.EnsureProjectDbExists">
	<summary>
 Ensures an air handler project database exists, and prevents existing project info from being overwritten.
 </summary>
	<history by="Casey" finish="2006/05/16">
 Created
 </history>
</member><member name="P:Rae.RaeSolutions.Updating.ContactDataStructure.ContactUpdateController.ProjectId">
	<summary>
 Project ID
 </summary>
</member><member name="M:Rae.RaeSolutions.Updating.ContactDataStructure.ContactUpdateController.#ctor(Rae.RaeSolutions.Business.Entities.item_id)">
	<summary>
 Initializes a new instance of contact update controller.
 </summary>
	<param name="projectId">
 Project ID
 </param>
</member><member name="M:Rae.RaeSolutions.Updating.ContactDataStructure.ContactUpdateController.Check">
	<summary>
 Checks what the contact data structure is
 </summary>
</member><member name="M:Rae.RaeSolutions.Updating.ContactDataStructure.ContactUpdateController.StartConversionWizard">
	<summary>
 Starts wizard that user can go through to update contacts.
 </summary>
</member><member name="T:Rae.RaeSolutions.Strings">
	<summary>
 Strings used in application.
 </summary>
	<history by="Casey Joyce" start="2006/08/08">
 Created
 </history>
</member><member name="M:Rae.RaeSolutions.SaveOldRevisionBeforeNavigatingRevisionsForm.saveAndRevisionButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles save and revision button's click event. 
 Hides form (if is valid) or alerts user (if is not valid).
 </summary>
</member><member name="M:Rae.RaeSolutions.SaveOldRevisionBeforeNavigatingRevisionsForm.cancelButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles cancel button's click event. Cancels and hides form.
 </summary>
</member><member name="T:Rae.RaeSolutions.SaveOldRevisionBeforeNavigatingRevisionsForm">
	<summary>
 Form to get project and equipment name from user.
 </summary>
</member><member name="P:Rae.RaeSolutions.DataGridViewValidationColumn.HeaderCell">
	<summary>
 Column header cell with image.
 </summary>
</member><member name="M:Rae.RaeSolutions.DataGridViewValidationColumn.#ctor">
	<summary>
 Constructs validation column to display validation status in cells and image in column header cell.
 </summary>
</member><member name="T:Rae.RaeSolutions.DataGridViewValidationColumn">
	<summary>
 Validation column displays images that indicate validation status.
 </summary>
	<history by="Casey Joyce" finish="2006/07/17">
 Created
 </history>
</member><member name="M:Rae.RaeSolutions.frmDownload.ShowMe">
	<summary>Displays wizard form on top
 </summary>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.#ctor">
	<summary>Initializes a new available options grid</summary>
</member><member name="P:Rae.RaeSolutions.AvailableOptionGrid.IsPriceVisible">
	<summary>Shows option prices if true</summary>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.GroupByCategory">
	<summary>Groups options by category</summary>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.Ungroup">
	<summary>Ungroups columns; lists options in a flat view</summary>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.ApplyStyle">
	<summary>Applies visual style</summary>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.SetColumnWidths">
	<summary>Sets column widths in grid</summary>
	<remarks>Columns are fixed length except for description which fills in the rest</remarks>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.UnselectAll">
	<summary>Unselects all selected options.</summary>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.RemoveAll">
	<summary>Removes all options. Grid will not contain any options.</summary>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.GetRow(System.String)">
	<summary>Gets available option row based on option code; returns null if option is not found</summary>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.GetFirstSelectedFrom(System.Collections.Generic.List{Rae.RaeSolutions.Business.Entities.EquipmentOption})">
	<summary>Gets first selected option from the available options grid.</summary>
	<remarks>Assumes all options in parameter are in grid</remarks>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.Select(System.Data.DataTable)">
	<summary>Selects options from table</summary>
</member><member name="M:Rae.RaeSolutions.AvailableOptionGrid.Select(Rae.RaeSolutions.Business.Entities.EquipmentOptionList)">
	<summary>Selects matching options in available options</summary>
	<param name="options">Option list to add to selected options</param>
</member><member name="T:Rae.RaeSolutions.AvailableOptionGrid">
	<summary>
 Specialized grid for displaying available options and allowing user to select options.
 </summary>
</member><member name="P:Rae.RaeSolutions.Diagnostics.UsageLog.ApplicationUsageLogger.ApplicationID">
	<summary>
 Unique identifier that can be used to access the row associated with an instance of the class.
 </summary>
	<value>Integer that uniquely identifies application instance.</value>
	<remarks>
 Use ApplicationUsage.FindByApplicationID to get associated row.
 </remarks>
	<history>
 	[CASEYJ]	3/9/2005	Created
 </history>
</member><member name="M:Rae.RaeSolutions.Diagnostics.UsageLog.ApplicationUsageLogger.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Ensures the log file exists.
 </summary>
	<param name="logFilePath"></param>
	<remarks>
 If log does not exist, a new log is created with the appropriate initial text.
 </remarks>
	<history>
 	[CASEYJ]	3/9/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.Diagnostics.UsageLog.ApplicationUsageLogger.LogApplicationStart(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Locally logs the time the that the application starts.
 </summary>
	<param name="username">Current username logged into application.</param>
	<remarks>
	</remarks>
	<history>
 	[CASEYJ]	3/9/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Rae.RaeSolutions.Diagnostics.UsageLog.ApplicationUsageLogger.LogApplicationEnd">
 -----------------------------------------------------------------------------
 <summary>
 Locally logs the time the application ends.
 </summary>
	<remarks>
 If application closes without Closing event occuring, then the logged start 
 and end times will be the same.
 </remarks>
	<history>
 	[CASEYJ]	3/9/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:Rae.RaeSolutions.Diagnostics.UsageLog.ApplicationUsageLogger">
 Project	 : RAESolutions
 Class	 : ApplicationUsageLogger
 
 -----------------------------------------------------------------------------
 <summary>
 Logs application usage statistics.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[CASEYJ]	3/9/2005	Created
 </history>
</member><member name="T:Rae.RaeSolutions.execution_schedule">
	<summary>
 dim schedule = execution_schedule.Execute(method).on(form).after_last_change_to(value).is_unchanged_for(msec:=500)
 schedule.change(value)
 </summary>
</member><member name="M:Rae.RaeSolutions.MyStyles.VistaGridStyle(C1.Win.C1TrueDBGrid.C1TrueDBGrid@)">
	<summary>Sets grid's style to a common style used by a number of grids</summary>
</member><member name="P:Rae.RaeSolutions.AddressControl.Address">
	<summary>
 Address to populate controls with
 </summary>
	<remarks>
 Get automatically pulls values from controls, but
 Set must be followed by the UpdateControls method to populate controls.
 </remarks>
</member><member name="M:Rae.RaeSolutions.AddressControl.RefreshData">
	<summary>
 Refreshes address object from entered values in controls.
 </summary>
</member><member name="M:Rae.RaeSolutions.AddressControl.UpdateControls">
	<summary>
 Updates controls
 </summary>
</member><member name="M:Rae.RaeSolutions.chiller_specs_control.PassOrderWriteUpParams(rae.reporting.CrystalReports.base_report_viewer)">
	<summary>Passes order write up parameters to report.</summary>
</member><member name="M:Rae.RaeSolutions.chiller_specs_control.GetControlValues(Rae.RaeSolutions.Business.Entities.EquipmentItem@)">
	<summary>Updates equipment with control values.</summary>
	<param name="equipment">Equipment to update.</param>
</member><member name="M:Rae.RaeSolutions.chiller_specs_control.SetControlValues(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Set control values to represent chiller.</summary>
</member><member name="P:Rae.RaeSolutions.chiller_specs_control.SplitCondenserModel">
	<summary>Split condenser model number (ex. 10A06-SC).</summary>
</member><member name="P:Rae.RaeSolutions.chiller_specs_control.SplitCondenserPrice">
	<summary>Price of split condenser</summary>
</member><member name="P:Rae.RaeSolutions.chiller_specs_control.SplitCondenserEnabled">
	<summary>True if split condenser is enabled, else false.</summary>
</member><member name="M:Rae.RaeSolutions.chiller_specs_control.EnableSplitCondenser(System.String,System.Double,Rae.RaeSolutions.chiller_specs_control.SplitCondenserClicked)">
	<summary>Enables split condenser.</summary>
	<param name="model">Split condenser model (ex. 10A06-SC).</param>
	<param name="price">Split condenser price.</param>
	<param name="clicked">Method that is invoked when split condenser text is clicked (ex. AddressOf AddCondenser).</param>
</member><member name="M:Rae.RaeSolutions.chiller_specs_control.DisableSplitCondenser">
	<summary>Disables split condenser.</summary>
</member><member name="T:Rae.RaeSolutions.chiller_specs_control.SplitCondenserClicked">
	<summary>
 Handles split condenser being clicked
 </summary>
	<param name="model">
 Split condenser model</param>
	<param name="price">
 Split condenser price</param>
</member><member name="P:Rae.RaeSolutions.CompanyForm.Company">
	<summary>Rep company object representing control values</summary>
</member><member name="M:Rae.RaeSolutions.CompanyForm.RefreshData">
	<summary>Refreshes rep company object based on control values</summary>
</member><member name="M:Rae.RaeSolutions.CompanyForm.UpdateControls">
	<summary>Updates control values based on rep company object</summary>
</member><member name="P:Rae.RaeSolutions.ContactSelectionControl.SelectedContact">
	<summary>
 The selected contact.
 </summary>
</member><member name="P:Rae.RaeSolutions.ContactSelectionControl.ActionsVisible">
	<summary>
 Hides or shows panel containing controls with add and edit functionality.
 </summary>
</member><member name="M:Rae.RaeSolutions.ContactSelectionControl.control_Click(System.Object,System.EventArgs)">
	<summary>
 Focuses control when role label or gradient panel is clicked in order help selection functionality.
 </summary>
</member><member name="E:Rae.RaeSolutions.OpenedProject.ProjectSet">
	<summary>
 Occurs after project is set.
 </summary>
</member><member name="M:Rae.RaeSolutions.OpenedProject.OnProjectSet(System.EventArgs)">
	<summary>
 Raises <see cref="E:Rae.RaeSolutions.OpenedProject.ProjectSet"/> event.
 </summary>
	<param name="e">
 Event arguments to pass in event.
 Use System.EventArgs.Empty if no data is being passed.
 </param>
	<remarks>
 Use this method to raise event rather than raising event directly.
 Protected - Prevents other classes from raising event
 Overridable - Allows derived classes to override implementation.
 </remarks>
</member><member name="P:Rae.RaeSolutions.OpenedProject.Manager">
	<summary>Project manager that is open.</summary>
</member><member name="P:Rae.RaeSolutions.OpenedProject.IsOpened">
	<summary>True if project is open; else false.</summary>
</member><member name="M:Rae.RaeSolutions.OpenedProject.#ctor">
	<summary>Hide constructor.</summary>
</member><member name="T:Rae.RaeSolutions.OpenedProject">
	<summary>
 Holds reference to open project.
 </summary>
	<history by="Casey Joyce" finish="2006/07/24" hours="1">
 Created
 </history>
</member><member name="P:Rae.RaeSolutions.evaporative_condenser_chiller_balance_window.CurrentRevision">
	<summary>
 The current revision # of process 
 being displayed on this form.
 </summary>
</member><member name="P:Rae.RaeSolutions.evaporative_condenser_chiller_balance_window.LatestRevision">
	<summary>
 The latest revision # of process 
 being displayed on this form.
 </summary>
</member><member name="M:Rae.RaeSolutions.evaporative_condenser_chiller_balance_window.RevisionView_RevisionChanged(Rae.RaeSolutions.RevisionView,Rae.ValueChangedEventArgs{System.Single})">
	<summary>
 Handles revision view control's revision changed event.
 If user has unsaved changes, asks user to save before navigating revisions.
 </summary>
</member><member name="T:Rae.RaeSolutions.dseProject.SavedProjectDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject.SavedAirHandlerDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject._SectionDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject.SectionDetailsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject.SavedProjectRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject.SavedAirHandlerRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject._SectionRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject.SectionDetailsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject.SavedProjectRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject.SavedAirHandlerRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject._SectionRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject.SectionDetailsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.dseProject">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="P:Rae.RaeSolutions.reports.order_write_up_report_viewer.version">
	<summary>Version of application</summary>
</member><member name="P:Rae.RaeSolutions.reports.order_write_up_report_viewer.options_price">
	<summary>Total options price for a single unit</summary>
</member><member name="P:Rae.RaeSolutions.reports.order_write_up_report_viewer.par_multiplier">
	<summary>PAR multiplier (as decimal)</summary>
</member><member name="P:Rae.RaeSolutions.reports.order_write_up_report_viewer.other_description">
	<summary>Description of other costs</summary>
</member><member name="M:Rae.RaeSolutions.ItemViewer.#ctor(System.Windows.Forms.Form)">
	<summary>Constructs viewer to view items in project such as equipment and project info.</summary>
	<param name="mdiParent">MDI parent form.</param>
</member><member name="P:Rae.RaeSolutions.ItemViewer.mdi_parent">
	<summary>MDI (Multiple Document Interface) parent form.</summary>
</member><member name="M:Rae.RaeSolutions.ItemViewer.IsViewed(System.String)">
	<summary>True if item is opened; else false.</summary>
	<param name="id">ID of the item being tested.</param>
</member><member name="M:Rae.RaeSolutions.ItemViewer.Focus(System.String)">
	<summary>Focuses on item with the ID. Returns item's form that was focused on. If item is not open, null is returned.</summary>
	<param name="id">ID of the item to focus on.</param>
</member><member name="M:Rae.RaeSolutions.ItemViewer.CloseForm(System.String)">
	<summary>
 Closes form with the ID.  Returns 1 if a form was closed
 </summary>
	<param name="id">
 ID of the item to focus on.
 </param>
</member><member name="M:Rae.RaeSolutions.ItemViewer.CloseAllForms">
	<summary>
 closes all CHILD forms in project
 </summary>
	<remarks></remarks>
</member><member name="M:Rae.RaeSolutions.ItemViewer.GetView(System.String)">
	<summary>
 Gets the form related to the item with the ID. If the item is not open then null is returned.
 </summary>
	<param name="id">
 ID of the item being searched for.
 </param>
</member><member name="M:Rae.RaeSolutions.ItemViewer.ViewProject(Rae.RaeSolutions.Business.Entities.ProjectItem)">
	<summary>
 Opens the project for viewing, or if it is already open, focuses on project. Returns form that was opened.
 </summary>
	<param name="project">
 Project to view.
 </param>
</member><member name="M:Rae.RaeSolutions.ItemViewer.ViewEquipment(Rae.RaeSolutions.Business.Entities.EquipmentItem,System.Boolean,System.Boolean,System.String@)">
	<summary>Opens the equipment for viewing or focuses equipment, if it is already open. Returns form viewed.</summary>
	<param name="equipment">Equipment to view.</param>
</member><member name="M:Rae.RaeSolutions.ItemViewer.ViewEquipment(Rae.RaeSolutions.Business.EquipmentType)">
	<summary>Views new equipment with specified equipment type.</summary>
	<param name="type">Type of equipment to view.</param>
	<returns>The equipment form that is viewed.</returns>
</member><member name="M:Rae.RaeSolutions.ItemViewer.ViewEquipmentRevision(Rae.RaeSolutions.Business.Entities.EquipmentItem,System.Single)">
	<summary>Views the equipment at a specified revision.</summary>
	<param name="equipment">Equipment to view at a different revision.</param>
	<param name="revisionToView">Revision to view.</param>
	<returns>Equipment at the specified revision</returns>
</member><member name="M:Rae.RaeSolutions.ItemViewer.ActiveItemIsValid">
	<summary>
 True if active form is a valid equipment or process form; else false.
 </summary>
</member><member name="M:Rae.RaeSolutions.ItemViewer.DisplayRevision(Rae.RaeSolutions.Business.Entities.ProcessItem,System.Single)">
	<summary>Get specified revision of ProcessItem</summary>
	<param name="Revision_To_Display">Optional (Blank returns current revision)</param>
	<returns>ProcessItem</returns>
</member><member name="M:Rae.RaeSolutions.ItemViewer.ViewProcess(Rae.RaeSolutions.Business.Entities.ProcessItem)">
	<summary>Opens the process for viewing or focuses process, if it is already open. Returns form viewed.</summary>
	<param name="process">Process to view.</param>
</member><member name="M:Rae.RaeSolutions.ItemViewer.ViewProcess(Rae.RaeSolutions.Business.ProcessType)">
	<summary>Opens the process for viewing or focuses process, if it is already open. Returns form viewed.</summary>
	<param name="type">Process type to view.</param>
</member><member name="M:Rae.RaeSolutions.ItemViewer.InitializeEquipmentForm(Rae.RaeSolutions.Business.Entities.EquipmentItem,Rae.RaeSolutions.EquipmentForm)">
	<summary>Initializes equipment form before viewing.</summary>
	<param name="equipment">Equipment to initialize with.</param>
	<param name="frmEquipment">Equipment form to initialize</param>
</member><member name="T:Rae.RaeSolutions.ItemViewer">
	<summary>Item viewer views items in project.</summary>
</member><member name="T:Rae.RaeSolutions.BaseChillerForm.RefrigerantItem">
	<summary>Items in refrigerant list</summary>
</member><member name="M:Rae.RaeSolutions.BaseChillerForm.indexOfCondenser(System.Windows.Forms.ComboBox,System.String,System.Int32)">
	<summary>
 Returns the index of the item with a matching condenser file name
 </summary>
</member><member name="M:Rae.RaeSolutions.BaseChillerForm.indexOfFanFileName(System.Windows.Forms.ComboBox,System.String,System.Int32)">
	<summary>Returns the index of the item with a matching fan file name</summary>
</member><member name="M:Rae.RaeSolutions.LoginForm.Login">
	<summary>Logs user into application. Validates and authenticates user credentials before opening application.</summary>
</member><member name="M:Rae.RaeSolutions.LoginForm.initializeValidation">
	<summary>
 Initializes validation (validation controls and validators).
 </summary>
</member><member name="M:Rae.RaeSolutions.LoginForm.loadSettings">
	<summary>
 Loads saved settings. If an upgrade (version increase) occurred, the previous version's settings are loaded.
 </summary>
</member><member name="M:Rae.RaeSolutions.LoginForm.determineRoleSectionVisibility">
	<summary>Shows/hides role (authorization) section.</summary>
</member><member name="M:Rae.RaeSolutions.LoginForm.ensureValidDivisionIsSelected">
	<summary>
 Ensures that the user logging in has permissions for the selected division.
 Changes division selection if necessary.
 </summary>
</member><member name="M:Rae.RaeSolutions.LoginForm.downloadCredentials">
	<summary>Downloads latest credentials and notifies user of progress.</summary>
</member><member name="T:Rae.RaeSolutions.LoginForm">
	<summary>Form used to authenticate (login) user.</summary>
</member><member name="P:Rae.RaeSolutions.CondensingUnitSpecsControl.Division">
	<summary>Division</summary>
</member><member name="P:Rae.RaeSolutions.CondensingUnitSpecsControl.CapacityUnits">
	<summary>Units of measurement for the condensing unit's capcacity</summary>
	<remarks>Use Tons for TSI and BTUH for CRI</remarks>
</member><member name="M:Rae.RaeSolutions.CondensingUnitSpecsControl.GetControlValues(Rae.RaeSolutions.Business.Entities.EquipmentItem@)">
	<summary>Updates equipment with control values.</summary>
	<param name="equipment">Equipment to update.</param>
</member><member name="M:Rae.RaeSolutions.CondensingUnitSpecsControl.SetControlValues(Rae.RaeSolutions.Business.Entities.EquipmentItem)">
	<summary>Sets control values to represent condensing unit.</summary>
	<param name="equipment">Condensing unit equipment item to display in controls.</param>
</member><member name="T:Rae.RaeSolutions.SaveOnCloseForm.UserSelection">
	<summary>
 List of selections a user can make.
 </summary>
</member><member name="P:Rae.RaeSolutions.SaveOnCloseForm.SaveSelection">
	<summary>
 Save selection that user chose.
 </summary>
</member><member name="M:Rae.RaeSolutions.SaveOnCloseForm.okButton_Click(System.Object,System.EventArgs)">
	<summary>
 Handles ok button click event.
 Sets user's save selection.
 </summary>
</member><member name="T:Rae.RaeSolutions.SaveOnCloseForm">
	<summary>
 Asks user if they want to save.
 </summary>
</member><member name="T:Rae.RaeSolutions.DataGridViewCheckColumn">
	<summary>
 Check box column that show check box image in column header cell.
 </summary>
	<history by="Casey Joyce" finish="2006/07/17">
 Created
 </history>
</member><member name="P:Rae.RaeSolutions.RevisionSave.LastSavedProcess">
	<summary>
 LastSavedProcess
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.CurrentProcess">
	<summary>
 CurrentProcess
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.LastSavedEquipment">
	<summary>
 LastSavedEquipment
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.CurrentEquipment">
	<summary>
 CurrentEquipment
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.CallingForm">
	<summary>
 CallingForm
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.SaveType">
	<summary>
 SaveType
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.FormClosing">
	<summary>
 FormClosing
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.ProcessType">
	<summary>
 ProcessType
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.GenerateEquipment">
	<summary>
 GenerateEquipment
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.RevChange">
	<summary>
 RevChange (fired from revision changed event)
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.CancelSave">
	<summary>
 CancelSave
 </summary>
</member><member name="P:Rae.RaeSolutions.RevisionSave.DoNotSave">
	<summary>
 DoNotSave
 </summary>
</member><member name="P:Rae.RaeSolutions.SaveToolStripPanel.TargetToolStrip">
	<summary>
 The tool strip that the source tool strip's buttons will be merged into.
 </summary>
</member><member name="P:Rae.RaeSolutions.SaveToolStripPanel.SaveClick">
	<summary>
 The event handler for the Save tool strip button's click event.
 </summary>
</member><member name="P:Rae.RaeSolutions.SaveToolStripPanel.SaveAsRevisionClick">
	<summary>
 The event handler for the Save as Revision tool strip button's click event.
 </summary>
</member><member name="M:Rae.RaeSolutions.SaveToolStripPanel.#ctor">
	<summary>
 Constructs a new tool strip panel with save buttons.
 </summary>
</member><member name="M:Rae.RaeSolutions.SaveToolStripPanel.SetUp(System.Windows.Forms.ToolStrip,System.EventHandler,System.EventHandler)">
	<summary>
 Sets the properties that should be set. And ensures they're only set once.
 </summary>
	<param name="targetToolStrip">
 The target tool strip that the source tool strip will merge with.
 </param>
	<param name="saveHandler">
 Event handler for the save button's click event.
 </param>
	<param name="saveAsRevisionHandler">
 Event handler for the save as revision button's click event.
 </param>
	<remarks>
 There is not a constructor with these parameters because you can't drag a control onto a form, if the constructor has 
 parameters.
 </remarks>
</member><member name="M:Rae.RaeSolutions.SaveToolStripPanel.Merge">
	<summary>
 Merges source and target tool strips.
 </summary>
</member><member name="M:Rae.RaeSolutions.SaveToolStripPanel.Unmerge">
	<summary>
 Unmerges source tool strip from target tool strip.
 </summary>
</member><member name="T:Rae.RaeSolutions.SaveToolStripPanel">
	<summary>
 Tool strip panel that contains buttons (ex. save buttons) used by child forms.
 </summary>
	<remarks>
 Drag the SaveToolStripPanel from the toolbox onto a form.
 The TargetToolStrip must be set for the merge functionality.
 The SaveClick and SaveAsRevisionClick event handlers handle their respective button's click event.
 </remarks>
</member><member name="T:Rae.RaeSolutions.dseUsage.ApplicationUsageDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseUsage.FormUsageDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseUsage.UserInformationDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseUsage.ApplicationUsageRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseUsage.FormUsageRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseUsage.UserInformationRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Rae.RaeSolutions.dseUsage.ApplicationUsageRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.dseUsage.FormUsageRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.dseUsage.UserInformationRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Rae.RaeSolutions.dseUsage">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member>
</members>
</doc>